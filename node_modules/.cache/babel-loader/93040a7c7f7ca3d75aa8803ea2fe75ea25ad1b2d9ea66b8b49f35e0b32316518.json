{"ast":null,"code":"import { defineComponent, useSlots, computed, openBlock, createBlock, resolveDynamicComponent, unref, normalizeClass, withCtx, createElementVNode, withDirectives, mergeProps, isRef, withModifiers, vModelCheckbox, createElementBlock, renderSlot, Fragment, createTextVNode, toDisplayString, createCommentVNode } from 'vue';\nimport { checkboxProps, checkboxEmits } from './checkbox2.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useCheckbox } from './composables/use-checkbox.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nconst __default__ = defineComponent({\n  name: \"ElCheckbox\"\n});\nconst _sfc_main = /* @__PURE__ */defineComponent({\n  ...__default__,\n  props: checkboxProps,\n  emits: checkboxEmits,\n  setup(__props) {\n    const props = __props;\n    const slots = useSlots();\n    const {\n      inputId,\n      isLabeledByFormItem,\n      isChecked,\n      isDisabled,\n      isFocused,\n      checkboxSize,\n      hasOwnLabel,\n      model,\n      actualValue,\n      handleChange,\n      onClickRoot\n    } = useCheckbox(props, slots);\n    const inputBindings = computed(() => {\n      var _a, _b, _c, _d;\n      if (props.trueValue || props.falseValue || props.trueLabel || props.falseLabel) {\n        return {\n          \"true-value\": (_b = (_a = props.trueValue) != null ? _a : props.trueLabel) != null ? _b : true,\n          \"false-value\": (_d = (_c = props.falseValue) != null ? _c : props.falseLabel) != null ? _d : false\n        };\n      }\n      return {\n        value: actualValue.value\n      };\n    });\n    const ns = useNamespace(\"checkbox\");\n    const compKls = computed(() => {\n      return [ns.b(), ns.m(checkboxSize.value), ns.is(\"disabled\", isDisabled.value), ns.is(\"bordered\", props.border), ns.is(\"checked\", isChecked.value)];\n    });\n    const spanKls = computed(() => {\n      return [ns.e(\"input\"), ns.is(\"disabled\", isDisabled.value), ns.is(\"checked\", isChecked.value), ns.is(\"indeterminate\", props.indeterminate), ns.is(\"focus\", isFocused.value)];\n    });\n    return (_ctx, _cache) => {\n      return openBlock(), createBlock(resolveDynamicComponent(!unref(hasOwnLabel) && unref(isLabeledByFormItem) ? \"span\" : \"label\"), {\n        class: normalizeClass(unref(compKls)),\n        \"aria-controls\": _ctx.indeterminate ? _ctx.ariaControls : null,\n        onClick: unref(onClickRoot)\n      }, {\n        default: withCtx(() => [createElementVNode(\"span\", {\n          class: normalizeClass(unref(spanKls))\n        }, [withDirectives(createElementVNode(\"input\", mergeProps({\n          id: unref(inputId),\n          \"onUpdate:modelValue\": $event => isRef(model) ? model.value = $event : null,\n          class: unref(ns).e(\"original\"),\n          type: \"checkbox\",\n          indeterminate: _ctx.indeterminate,\n          name: _ctx.name,\n          tabindex: _ctx.tabindex,\n          disabled: unref(isDisabled)\n        }, unref(inputBindings), {\n          onChange: unref(handleChange),\n          onFocus: $event => isFocused.value = true,\n          onBlur: $event => isFocused.value = false,\n          onClick: withModifiers(() => {}, [\"stop\"])\n        }), null, 16, [\"id\", \"onUpdate:modelValue\", \"indeterminate\", \"name\", \"tabindex\", \"disabled\", \"onChange\", \"onFocus\", \"onBlur\", \"onClick\"]), [[vModelCheckbox, unref(model)]]), createElementVNode(\"span\", {\n          class: normalizeClass(unref(ns).e(\"inner\"))\n        }, null, 2)], 2), unref(hasOwnLabel) ? (openBlock(), createElementBlock(\"span\", {\n          key: 0,\n          class: normalizeClass(unref(ns).e(\"label\"))\n        }, [renderSlot(_ctx.$slots, \"default\"), !_ctx.$slots.default ? (openBlock(), createElementBlock(Fragment, {\n          key: 0\n        }, [createTextVNode(toDisplayString(_ctx.label), 1)], 64)) : createCommentVNode(\"v-if\", true)], 2)) : createCommentVNode(\"v-if\", true)]),\n        _: 3\n      }, 8, [\"class\", \"aria-controls\", \"onClick\"]);\n    };\n  }\n});\nvar Checkbox = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"checkbox.vue\"]]);\nexport { Checkbox as default };","map":{"version":3,"names":["name","slots","useSlots","inputId","isLabeledByFormItem","isChecked","isDisabled","isFocused","checkboxSize","hasOwnLabel","model","actualValue","handleChange","onClickRoot","useCheckbox","props","inputBindings","computed","_a","_b","_c","_d","trueValue","falseValue","trueLabel","falseLabel","value","ns","useNamespace","compKls","b","m","is","border","spanKls","e","indeterminate"],"sources":["../../../../../../packages/components/checkbox/src/checkbox.vue"],"sourcesContent":["<template>\n  <component\n    :is=\"!hasOwnLabel && isLabeledByFormItem ? 'span' : 'label'\"\n    :class=\"compKls\"\n    :aria-controls=\"indeterminate ? ariaControls : null\"\n    @click=\"onClickRoot\"\n  >\n    <span :class=\"spanKls\">\n      <input\n        :id=\"inputId\"\n        v-model=\"model\"\n        :class=\"ns.e('original')\"\n        type=\"checkbox\"\n        :indeterminate=\"indeterminate\"\n        :name=\"name\"\n        :tabindex=\"tabindex\"\n        :disabled=\"isDisabled\"\n        v-bind=\"inputBindings\"\n        @change=\"handleChange\"\n        @focus=\"isFocused = true\"\n        @blur=\"isFocused = false\"\n        @click.stop\n      />\n      <span :class=\"ns.e('inner')\" />\n    </span>\n    <span v-if=\"hasOwnLabel\" :class=\"ns.e('label')\">\n      <slot />\n      <template v-if=\"!$slots.default\">{{ label }}</template>\n    </span>\n  </component>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, useSlots } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { checkboxEmits, checkboxProps } from './checkbox'\nimport { useCheckbox } from './composables'\n\ndefineOptions({\n  name: 'ElCheckbox',\n})\n\nconst props = defineProps(checkboxProps)\ndefineEmits(checkboxEmits)\nconst slots = useSlots()\n\nconst {\n  inputId,\n  isLabeledByFormItem,\n  isChecked,\n  isDisabled,\n  isFocused,\n  checkboxSize,\n  hasOwnLabel,\n  model,\n  actualValue,\n  handleChange,\n  onClickRoot,\n} = useCheckbox(props, slots)\n\nconst inputBindings = computed(() => {\n  if (\n    props.trueValue ||\n    props.falseValue ||\n    props.trueLabel ||\n    props.falseLabel\n  ) {\n    return {\n      'true-value': props.trueValue ?? props.trueLabel ?? true,\n      'false-value': props.falseValue ?? props.falseLabel ?? false,\n    }\n  }\n  return {\n    value: actualValue.value,\n  }\n})\n\nconst ns = useNamespace('checkbox')\n\nconst compKls = computed(() => {\n  return [\n    ns.b(),\n    ns.m(checkboxSize.value),\n    ns.is('disabled', isDisabled.value),\n    ns.is('bordered', props.border),\n    ns.is('checked', isChecked.value),\n  ]\n})\n\nconst spanKls = computed(() => {\n  return [\n    ns.e('input'),\n    ns.is('disabled', isDisabled.value),\n    ns.is('checked', isChecked.value),\n    ns.is('indeterminate', props.indeterminate),\n    ns.is('focus', isFocused.value),\n  ]\n})\n</script>\n"],"mappings":";;;;;mCAsCc;EACZA,IAAM;AACR;;;;;;;IAIA,MAAMC,KAAA,GAAQC,QAAS;IAEjB;MACJC,OAAA;MACAC,mBAAA;MACAC,SAAA;MACAC,UAAA;MACAC,SAAA;MACAC,YAAA;MACAC,WAAA;MACAC,KAAA;MACAC,WAAA;MACAC,YAAA;MACAC;IAAA,CACF,GAAIC,WAAY,CAAAC,KAAA,EAAOd,KAAK;IAEtB,MAAAe,aAAA,GAAgBC,QAAA,CAAS,MAAM;MACnC,IACEC,EAAA,EAAAC,EAAM,EACNC,EAAA,EAAAC,EAAA;MAIO,IAAAN,KAAA,CAAAO,SAAA,IAAAP,KAAA,CAAAQ,UAAA,IAAAR,KAAA,CAAAS,SAAA,IAAAT,KAAA,CAAAU,UAAA;QAAA,OACS;UACd,YAAe,GAAAN,EAAA,IAAMD,EAAc,GAAAH,KAAA,CAAAO,SAAM,KAAc,OAAAJ,EAAA,GAAAH,KAAA,CAAAS,SAAA,YAAAL,EAAA;UACzD,gBAAAE,EAAA,IAAAD,EAAA,GAAAL,KAAA,CAAAQ,UAAA,YAAAH,EAAA,GAAAL,KAAA,CAAAU,UAAA,YAAAJ,EAAA;QAAA,CACF;MACA;MAAO;QAEPK,KAAA,EAAAf,WAAA,CAAAe;MAAA,CACD;IAED,CAAM;IAEA,MAAAC,EAAA,GAAAC,YAAA,WAAyB;IACtB,MAAAC,OAAA,GAAAZ,QAAA;MAAA,OACA,CACLU,EAAA,CAAGG,CAAE,IACLH,EAAG,CAAAI,CAAA,CAAAvB,YAAe,CAAAkB,KAAA,GAClBC,EAAG,CAAAK,EAAA,CAAG,UAAY,EAAA1B,UAAY,CAAAoB,KAAA,GAC9BC,EAAG,CAAAK,EAAA,CAAG,UAAW,EAAAjB,KAAA,CAAAkB,MAAe,GAClCN,EAAA,CAAAK,EAAA,YAAA3B,SAAA,CAAAqB,KAAA,EACD;IAED,CAAM;IACG,MAAAQ,OAAA,GAAAjB,QAAA;MACL,OAAK,CACLU,EAAG,CAAAQ,CAAA,QAAe,GAClBR,EAAG,CAAAK,EAAA,CAAG,UAAW,EAAA1B,UAAe,CAAAoB,KAAA,GAChCC,EAAG,CAAAK,EAAA,CAAG,SAAiB,EAAA3B,SAAA,CAAAqB,KAAmB,GAC1CC,EAAG,CAAAK,EAAA,CAAG,eAAS,EAAAjB,KAAe,CAAAqB,aAAA,GAChCT,EAAA,CAAAK,EAAA,UAAAzB,SAAA,CAAAmB,KAAA,EACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}