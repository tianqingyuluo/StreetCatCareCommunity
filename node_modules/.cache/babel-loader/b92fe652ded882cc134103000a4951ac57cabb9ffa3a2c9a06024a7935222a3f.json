{"ast":null,"code":"import { useTooltipTriggerProps } from '../../tooltip/src/trigger.mjs';\nimport { roleTypes } from '../../popper/src/popper2.mjs';\nimport { buildProps, definePropType } from '../../../utils/vue/props/runtime.mjs';\nimport { EVENT_CODE } from '../../../constants/aria.mjs';\nimport { useTooltipContentProps } from '../../tooltip/src/content.mjs';\nimport { iconPropType } from '../../../utils/vue/icon.mjs';\nimport { createCollectionWithScope } from '../../collection/src/collection2.mjs';\nconst dropdownProps = buildProps({\n  trigger: useTooltipTriggerProps.trigger,\n  triggerKeys: {\n    type: definePropType(Array),\n    default: () => [EVENT_CODE.enter, EVENT_CODE.numpadEnter, EVENT_CODE.space, EVENT_CODE.down]\n  },\n  virtualTriggering: useTooltipTriggerProps.virtualTriggering,\n  virtualRef: useTooltipTriggerProps.virtualRef,\n  effect: {\n    ...useTooltipContentProps.effect,\n    default: \"light\"\n  },\n  type: {\n    type: definePropType(String)\n  },\n  placement: {\n    type: definePropType(String),\n    default: \"bottom\"\n  },\n  popperOptions: {\n    type: definePropType(Object),\n    default: () => ({})\n  },\n  id: String,\n  size: {\n    type: String,\n    default: \"\"\n  },\n  splitButton: Boolean,\n  hideOnClick: {\n    type: Boolean,\n    default: true\n  },\n  loop: {\n    type: Boolean,\n    default: true\n  },\n  showArrow: {\n    type: Boolean,\n    default: true\n  },\n  showTimeout: {\n    type: Number,\n    default: 150\n  },\n  hideTimeout: {\n    type: Number,\n    default: 150\n  },\n  tabindex: {\n    type: definePropType([Number, String]),\n    default: 0\n  },\n  maxHeight: {\n    type: definePropType([Number, String]),\n    default: \"\"\n  },\n  popperClass: {\n    type: String,\n    default: \"\"\n  },\n  disabled: Boolean,\n  role: {\n    type: String,\n    values: roleTypes,\n    default: \"menu\"\n  },\n  buttonProps: {\n    type: definePropType(Object)\n  },\n  teleported: useTooltipContentProps.teleported,\n  persistent: {\n    type: Boolean,\n    default: true\n  }\n});\nconst dropdownItemProps = buildProps({\n  command: {\n    type: [Object, String, Number],\n    default: () => ({})\n  },\n  disabled: Boolean,\n  divided: Boolean,\n  textValue: String,\n  icon: {\n    type: iconPropType\n  }\n});\nconst dropdownMenuProps = buildProps({\n  onKeydown: {\n    type: definePropType(Function)\n  }\n});\nconst FIRST_KEYS = [EVENT_CODE.down, EVENT_CODE.pageDown, EVENT_CODE.home];\nconst LAST_KEYS = [EVENT_CODE.up, EVENT_CODE.pageUp, EVENT_CODE.end];\nconst FIRST_LAST_KEYS = [...FIRST_KEYS, ...LAST_KEYS];\nconst {\n  ElCollection,\n  ElCollectionItem,\n  COLLECTION_INJECTION_KEY,\n  COLLECTION_ITEM_INJECTION_KEY\n} = createCollectionWithScope(\"Dropdown\");\nexport { COLLECTION_INJECTION_KEY as DROPDOWN_COLLECTION_INJECTION_KEY, COLLECTION_ITEM_INJECTION_KEY as DROPDOWN_COLLECTION_ITEM_INJECTION_KEY, ElCollection, ElCollectionItem, FIRST_KEYS, FIRST_LAST_KEYS, LAST_KEYS, dropdownItemProps, dropdownMenuProps, dropdownProps };","map":{"version":3,"names":["dropdownProps","buildProps","trigger","useTooltipTriggerProps","triggerKeys","type","definePropType","Array","default","EVENT_CODE","enter","numpadEnter","space","down","virtualTriggering","virtualRef","effect","useTooltipContentProps","String","placement","popperOptions","Object","id","size","splitButton","Boolean","hideOnClick","loop","showArrow","showTimeout","Number","hideTimeout","tabindex","maxHeight","popperClass","disabled","role","values","roleTypes","buttonProps","teleported","persistent","dropdownItemProps","command","divided","textValue","icon","iconPropType","dropdownMenuProps","onKeydown","Function","FIRST_KEYS","pageDown","home","LAST_KEYS","up","pageUp","end","FIRST_LAST_KEYS","ElCollection","ElCollectionItem","COLLECTION_INJECTION_KEY","COLLECTION_ITEM_INJECTION_KEY","createCollectionWithScope"],"sources":["../../../../../../packages/components/dropdown/src/dropdown.ts"],"sourcesContent":["import { buildProps, definePropType, iconPropType } from '@element-plus/utils'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport { createCollectionWithScope } from '@element-plus/components/collection'\nimport {\n  useTooltipContentProps,\n  useTooltipTriggerProps,\n} from '@element-plus/components/tooltip'\nimport { roleTypes } from '@element-plus/components/popper'\n\nimport type { Placement } from '@element-plus/components/popper'\nimport type { Options } from '@popperjs/core'\nimport type { ButtonProps, ButtonType } from '@element-plus/components/button'\nimport type { ComponentInternalInstance, ComputedRef } from 'vue'\nimport type { Nullable } from '@element-plus/utils'\n\nexport interface IElDropdownInstance {\n  instance?: ComponentInternalInstance\n  dropdownSize?: ComputedRef<string>\n  handleClick?: () => void\n  commandHandler?: (...arg: any[]) => void\n  show?: () => void\n  hide?: () => void\n  trigger?: ComputedRef<string>\n  hideOnClick?: ComputedRef<boolean>\n  triggerElm?: ComputedRef<Nullable<HTMLButtonElement>>\n}\n\nexport const dropdownProps = buildProps({\n  /**\n   * @description how to trigger\n   */\n  trigger: useTooltipTriggerProps.trigger,\n  triggerKeys: {\n    type: definePropType<string[]>(Array),\n    default: () => [\n      EVENT_CODE.enter,\n      EVENT_CODE.numpadEnter,\n      EVENT_CODE.space,\n      EVENT_CODE.down,\n    ],\n  },\n  /**\n   * @description Indicates whether virtual triggering is enabled\n   */\n  virtualTriggering: useTooltipTriggerProps.virtualTriggering,\n  /**\n   * @description Indicates the reference element to which the dropdown is attached\n   */\n  virtualRef: useTooltipTriggerProps.virtualRef,\n  effect: {\n    ...useTooltipContentProps.effect,\n    default: 'light',\n  },\n  /**\n   * @description menu button type, refer to `Button` Component, only works when `split-button` is true\n   */\n  type: {\n    type: definePropType<ButtonType>(String),\n  },\n  /**\n   * @description placement of pop menu\n   */\n  placement: {\n    type: definePropType<Placement>(String),\n    default: 'bottom',\n  },\n  /**\n   * @description [popper.js](https://popper.js.org/docs/v2/) parameters\n   */\n  popperOptions: {\n    type: definePropType<Partial<Options>>(Object),\n    default: () => ({}),\n  },\n  id: String,\n  /**\n   * @description menu size, also works on the split button\n   */\n  size: {\n    type: String,\n    default: '',\n  },\n  /**\n   * @description whether a button group is displayed\n   */\n  splitButton: Boolean,\n  /**\n   * @description whether to hide menu after clicking menu-item\n   */\n  hideOnClick: {\n    type: Boolean,\n    default: true,\n  },\n  loop: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description whether the tooltip content has an arrow\n   */\n  showArrow: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description delay time before show a dropdown (only works when trigger is `hover`)\n   */\n  showTimeout: {\n    type: Number,\n    default: 150,\n  },\n  /**\n   * @description delay time before hide a dropdown (only works when trigger is `hover`)\n   */\n  hideTimeout: {\n    type: Number,\n    default: 150,\n  },\n  /**\n   * @description [tabindex](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of Dropdown\n   */\n  tabindex: {\n    type: definePropType<number | string>([Number, String]),\n    default: 0,\n  },\n  /**\n   * @description the max height of menu\n   */\n  maxHeight: {\n    type: definePropType<number | string>([Number, String]),\n    default: '',\n  },\n  /**\n   * @description custom class name for Dropdown's dropdown\n   */\n  popperClass: {\n    type: String,\n    default: '',\n  },\n  /**\n   * @description whether to disable\n   */\n  disabled: Boolean,\n  /**\n   * @description the ARIA role attribute for the dropdown menu. Depending on the use case, you may want to change this to 'navigation'\n   */\n  role: {\n    type: String,\n    values: roleTypes,\n    default: 'menu',\n  },\n  buttonProps: {\n    type: definePropType<Partial<ButtonProps>>(Object),\n  },\n  /**\n   * @description whether the dropdown popup is teleported to the body\n   */\n  teleported: useTooltipContentProps.teleported,\n  /**\n   * @description when dropdown inactive and `persistent` is `false` , dropdown menu will be destroyed\n   */\n  persistent: {\n    type: Boolean,\n    default: true,\n  },\n} as const)\n\nexport const dropdownItemProps = buildProps({\n  /**\n   * @description a command to be dispatched to Dropdown's `command` callback\n   */\n  command: {\n    type: [Object, String, Number],\n    default: () => ({}),\n  },\n  /**\n   * @description whether the item is disabled\n   */\n  disabled: Boolean,\n  /**\n   * @description whether a divider is displayed\n   */\n  divided: Boolean,\n  textValue: String,\n  /**\n   * @description custom icon\n   */\n  icon: {\n    type: iconPropType,\n  },\n} as const)\n\nexport const dropdownMenuProps = buildProps({\n  onKeydown: { type: definePropType<(e: KeyboardEvent) => void>(Function) },\n})\n\nexport const FIRST_KEYS = [\n  EVENT_CODE.down,\n  EVENT_CODE.pageDown,\n  EVENT_CODE.home,\n]\n\nexport const LAST_KEYS = [EVENT_CODE.up, EVENT_CODE.pageUp, EVENT_CODE.end]\n\nexport const FIRST_LAST_KEYS = [...FIRST_KEYS, ...LAST_KEYS]\n\nconst {\n  ElCollection,\n  ElCollectionItem,\n  COLLECTION_INJECTION_KEY,\n  COLLECTION_ITEM_INJECTION_KEY,\n} = createCollectionWithScope('Dropdown')\n\nexport {\n  ElCollection,\n  ElCollectionItem,\n  COLLECTION_INJECTION_KEY as DROPDOWN_COLLECTION_INJECTION_KEY,\n  COLLECTION_ITEM_INJECTION_KEY as DROPDOWN_COLLECTION_ITEM_INJECTION_KEY,\n}\n"],"mappings":";;;;;;;AAQY,MAACA,aAAa,GAAGC,UAAU,CAAC;EACtCC,OAAO,EAAEC,sBAAsB,CAACD,OAAO;EACvCE,WAAW,EAAE;IACXC,IAAI,EAAEC,cAAc,CAACC,KAAK,CAAC;IAC3BC,OAAO,EAAEA,CAAA,KAAM,CACbC,UAAU,CAACC,KAAK,EAChBD,UAAU,CAACE,WAAW,EACtBF,UAAU,CAACG,KAAK,EAChBH,UAAU,CAACI,IAAI;EAErB,CAAG;EACDC,iBAAiB,EAAEX,sBAAsB,CAACW,iBAAiB;EAC3DC,UAAU,EAAEZ,sBAAsB,CAACY,UAAU;EAC7CC,MAAM,EAAE;IACN,GAAGC,sBAAsB,CAACD,MAAM;IAChCR,OAAO,EAAE;EACb,CAAG;EACDH,IAAI,EAAE;IACJA,IAAI,EAAEC,cAAc,CAACY,MAAM;EAC/B,CAAG;EACDC,SAAS,EAAE;IACTd,IAAI,EAAEC,cAAc,CAACY,MAAM,CAAC;IAC5BV,OAAO,EAAE;EACb,CAAG;EACDY,aAAa,EAAE;IACbf,IAAI,EAAEC,cAAc,CAACe,MAAM,CAAC;IAC5Bb,OAAO,EAAEA,CAAA,MAAO,EAAE;EACtB,CAAG;EACDc,EAAE,EAAEJ,MAAM;EACVK,IAAI,EAAE;IACJlB,IAAI,EAAEa,MAAM;IACZV,OAAO,EAAE;EACb,CAAG;EACDgB,WAAW,EAAEC,OAAO;EACpBC,WAAW,EAAE;IACXrB,IAAI,EAAEoB,OAAO;IACbjB,OAAO,EAAE;EACb,CAAG;EACDmB,IAAI,EAAE;IACJtB,IAAI,EAAEoB,OAAO;IACbjB,OAAO,EAAE;EACb,CAAG;EACDoB,SAAS,EAAE;IACTvB,IAAI,EAAEoB,OAAO;IACbjB,OAAO,EAAE;EACb,CAAG;EACDqB,WAAW,EAAE;IACXxB,IAAI,EAAEyB,MAAM;IACZtB,OAAO,EAAE;EACb,CAAG;EACDuB,WAAW,EAAE;IACX1B,IAAI,EAAEyB,MAAM;IACZtB,OAAO,EAAE;EACb,CAAG;EACDwB,QAAQ,EAAE;IACR3B,IAAI,EAAEC,cAAc,CAAC,CAACwB,MAAM,EAAEZ,MAAM,CAAC,CAAC;IACtCV,OAAO,EAAE;EACb,CAAG;EACDyB,SAAS,EAAE;IACT5B,IAAI,EAAEC,cAAc,CAAC,CAACwB,MAAM,EAAEZ,MAAM,CAAC,CAAC;IACtCV,OAAO,EAAE;EACb,CAAG;EACD0B,WAAW,EAAE;IACX7B,IAAI,EAAEa,MAAM;IACZV,OAAO,EAAE;EACb,CAAG;EACD2B,QAAQ,EAAEV,OAAO;EACjBW,IAAI,EAAE;IACJ/B,IAAI,EAAEa,MAAM;IACZmB,MAAM,EAAEC,SAAS;IACjB9B,OAAO,EAAE;EACb,CAAG;EACD+B,WAAW,EAAE;IACXlC,IAAI,EAAEC,cAAc,CAACe,MAAM;EAC/B,CAAG;EACDmB,UAAU,EAAEvB,sBAAsB,CAACuB,UAAU;EAC7CC,UAAU,EAAE;IACVpC,IAAI,EAAEoB,OAAO;IACbjB,OAAO,EAAE;EACb;AACA,CAAC;AACW,MAACkC,iBAAiB,GAAGzC,UAAU,CAAC;EAC1C0C,OAAO,EAAE;IACPtC,IAAI,EAAE,CAACgB,MAAM,EAAEH,MAAM,EAAEY,MAAM,CAAC;IAC9BtB,OAAO,EAAEA,CAAA,MAAO,EAAE;EACtB,CAAG;EACD2B,QAAQ,EAAEV,OAAO;EACjBmB,OAAO,EAAEnB,OAAO;EAChBoB,SAAS,EAAE3B,MAAM;EACjB4B,IAAI,EAAE;IACJzC,IAAI,EAAE0C;EACV;AACA,CAAC;AACW,MAACC,iBAAiB,GAAG/C,UAAU,CAAC;EAC1CgD,SAAS,EAAE;IAAE5C,IAAI,EAAEC,cAAc,CAAC4C,QAAQ;EAAC;AAC7C,CAAC;AACW,MAACC,UAAU,GAAG,CACxB1C,UAAU,CAACI,IAAI,EACfJ,UAAU,CAAC2C,QAAQ,EACnB3C,UAAU,CAAC4C,IAAI,CACjB;AACY,MAACC,SAAS,GAAG,CAAC7C,UAAU,CAAC8C,EAAE,EAAE9C,UAAU,CAAC+C,MAAM,EAAE/C,UAAU,CAACgD,GAAG;AAC9D,MAACC,eAAe,GAAG,CAAC,GAAGP,UAAU,EAAE,GAAGG,SAAS;AACtD,MAAC;EACJK,YAAY;EACZC,gBAAgB;EAChBC,wBAAwB;EACxBC;AACF,CAAC,GAAGC,yBAAyB,CAAC,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}