{"ast":null,"code":"import { ref, reactive } from 'vue';\nimport { ElMessage } from 'element-plus';\nimport axios from 'axios'; // 假设您已经安装了 axios\n\nexport default {\n  name: 'LoginPage',\n  setup() {\n    const loginFormRef = ref(null);\n    const loginForm = reactive({\n      username: '',\n      password: ''\n    });\n    const loginRules = {\n      username: [{\n        required: true,\n        message: '请输入用户名',\n        trigger: 'blur'\n      }],\n      password: [{\n        required: true,\n        message: '请输入密码',\n        trigger: 'blur'\n      }]\n    };\n    const submitForm = () => {\n      loginFormRef.value.validate(async valid => {\n        if (valid) {\n          try {\n            const response = await axios.post('/api/auth/login-web', {\n              username: loginForm.username,\n              password: loginForm.password\n            });\n            if (response.data.code === 200) {\n              // 假设后端返回的成功码是 200\n              ElMessage.success('登录成功！');\n              // 登录成功后可以进行页面跳转，例如跳转到首页\n              // router.push('/home'); // 需要引入 router\n            } else {\n              ElMessage.error(response.data.message || '登录失败，请检查用户名或密码！');\n            }\n          } catch (error) {\n            console.error('登录请求失败:', error);\n            ElMessage.error('登录请求失败，请稍后再试！');\n          }\n        } else {\n          ElMessage.error('请填写完整的登录信息！');\n          return false;\n        }\n      });\n    };\n    return {\n      loginFormRef,\n      loginForm,\n      loginRules,\n      submitForm\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","ElMessage","axios","name","setup","loginFormRef","loginForm","username","password","loginRules","required","message","trigger","submitForm","value","validate","valid","response","post","data","code","success","error","console"],"sources":["D:\\实训+课程\\软件开发实训2\\VueProject\\vue-project\\src\\views\\LoginPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <el-card class=\"login-card\">\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <span>用户登录</span>\r\n        </div>\r\n      </template>\r\n      <el-form :model=\"loginForm\" :rules=\"loginRules\" ref=\"loginFormRef\" label-width=\"80px\">\r\n        <el-form-item label=\"用户名\" prop=\"username\">\r\n          <el-input v-model=\"loginForm.username\" placeholder=\"请输入用户名\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"密码\" prop=\"password\">\r\n          <el-input type=\"password\" v-model=\"loginForm.password\" placeholder=\"请输入密码\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"submitForm\">登录</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive } from 'vue';\r\nimport { ElMessage } from 'element-plus';\r\nimport axios from 'axios'; // 假设您已经安装了 axios\r\n\r\nexport default {\r\n  name: 'LoginPage',\r\n  setup() {\r\n    const loginFormRef = ref(null);\r\n    const loginForm = reactive({\r\n      username: '',\r\n      password: ''\r\n    });\r\n\r\n    const loginRules = {\r\n      username: [\r\n        { required: true, message: '请输入用户名', trigger: 'blur' }\r\n      ],\r\n      password: [\r\n        { required: true, message: '请输入密码', trigger: 'blur' }\r\n      ]\r\n    };\r\n\r\n    const submitForm = () => {\r\n      loginFormRef.value.validate(async (valid) => {\r\n        if (valid) {\r\n          try {\r\n            const response = await axios.post('/api/auth/login-web', {\r\n              username: loginForm.username,\r\n              password: loginForm.password\r\n            });\r\n            if (response.data.code === 200) { // 假设后端返回的成功码是 200\r\n              ElMessage.success('登录成功！');\r\n              // 登录成功后可以进行页面跳转，例如跳转到首页\r\n              // router.push('/home'); // 需要引入 router\r\n            } else {\r\n              ElMessage.error(response.data.message || '登录失败，请检查用户名或密码！');\r\n            }\r\n          } catch (error) {\r\n            console.error('登录请求失败:', error);\r\n            ElMessage.error('登录请求失败，请稍后再试！');\r\n          }\r\n        } else {\r\n          ElMessage.error('请填写完整的登录信息！');\r\n          return false;\r\n        }\r\n      });\r\n    };\r\n\r\n    return {\r\n      loginFormRef,\r\n      loginForm,\r\n      loginRules,\r\n      submitForm\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.login-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh; /* 将 min-height 改为 height */\r\n  overflow: hidden; /* 隐藏溢出内容 */\r\n  background-color: #f0f2f5;\r\n}\r\n\r\n.login-card {\r\n  width: 400px;\r\n  padding: 20px;\r\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.card-header {\r\n  text-align: center;\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n}\r\n</style>"],"mappings":"AAwBA,SAASA,GAAG,EAAEC,QAAO,QAAS,KAAK;AACnC,SAASC,SAAQ,QAAS,cAAc;AACxC,OAAOC,KAAI,MAAO,OAAO,EAAE;;AAE3B,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,KAAKA,CAAA,EAAG;IACN,MAAMC,YAAW,GAAIN,GAAG,CAAC,IAAI,CAAC;IAC9B,MAAMO,SAAQ,GAAIN,QAAQ,CAAC;MACzBO,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;IACZ,CAAC,CAAC;IAEF,MAAMC,UAAS,GAAI;MACjBF,QAAQ,EAAE,CACR;QAAEG,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,QAAQ;QAAEC,OAAO,EAAE;MAAO,EACtD;MACDJ,QAAQ,EAAE,CACR;QAAEE,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,OAAO;QAAEC,OAAO,EAAE;MAAO;IAExD,CAAC;IAED,MAAMC,UAAS,GAAIA,CAAA,KAAM;MACvBR,YAAY,CAACS,KAAK,CAACC,QAAQ,CAAC,MAAOC,KAAK,IAAK;QAC3C,IAAIA,KAAK,EAAE;UACT,IAAI;YACF,MAAMC,QAAO,GAAI,MAAMf,KAAK,CAACgB,IAAI,CAAC,qBAAqB,EAAE;cACvDX,QAAQ,EAAED,SAAS,CAACC,QAAQ;cAC5BC,QAAQ,EAAEF,SAAS,CAACE;YACtB,CAAC,CAAC;YACF,IAAIS,QAAQ,CAACE,IAAI,CAACC,IAAG,KAAM,GAAG,EAAE;cAAE;cAChCnB,SAAS,CAACoB,OAAO,CAAC,OAAO,CAAC;cAC1B;cACA;YACF,OAAO;cACLpB,SAAS,CAACqB,KAAK,CAACL,QAAQ,CAACE,IAAI,CAACR,OAAM,IAAK,iBAAiB,CAAC;YAC7D;UACF,EAAE,OAAOW,KAAK,EAAE;YACdC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;YAC/BrB,SAAS,CAACqB,KAAK,CAAC,eAAe,CAAC;UAClC;QACF,OAAO;UACLrB,SAAS,CAACqB,KAAK,CAAC,aAAa,CAAC;UAC9B,OAAO,KAAK;QACd;MACF,CAAC,CAAC;IACJ,CAAC;IAED,OAAO;MACLjB,YAAY;MACZC,SAAS;MACTG,UAAU;MACVI;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}