{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"login-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_card, {\n    class: \"login-card\"\n  }, {\n    header: _withCtx(() => [...(_cache[2] || (_cache[2] = [_createElementVNode(\"div\", {\n      class: \"card-header\"\n    }, [_createElementVNode(\"span\", null, \"用户登录\")], -1 /* CACHED */)]))]),\n    default: _withCtx(() => [_createVNode(_component_el_form, {\n      model: $setup.loginForm,\n      rules: $setup.loginRules,\n      ref: \"loginFormRef\",\n      \"label-width\": \"0px\",\n      class: \"login-form\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        prop: \"username\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.loginForm.username,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.loginForm.username = $event),\n          placeholder: \"请输入用户名\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        prop: \"password\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          type: \"password\",\n          modelValue: $setup.loginForm.password,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.loginForm.password = $event),\n          placeholder: \"请输入密码\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, null, {\n        default: _withCtx(() => [_createVNode(_component_el_button, {\n          type: \"primary\",\n          onClick: $setup.handleLogin,\n          style: {\n            \"width\": \"100%\"\n          }\n        }, {\n          default: _withCtx(() => [...(_cache[3] || (_cache[3] = [_createTextVNode(\"登录\", -1 /* CACHED */)]))]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\", \"rules\"])]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_el_card","header","_withCtx","_cache","_createElementVNode","_component_el_form","model","$setup","loginForm","rules","loginRules","ref","_component_el_form_item","prop","_component_el_input","username","$event","placeholder","type","password","_component_el_button","onClick","handleLogin","style"],"sources":["D:\\实训+课程\\软件开发实训2\\VueProject\\vue-project\\src\\views\\LoginPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <el-card class=\"login-card\">\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <span>用户登录</span>\r\n        </div>\r\n      </template>\r\n      <el-form :model=\"loginForm\" :rules=\"loginRules\" ref=\"loginFormRef\" label-width=\"0px\" class=\"login-form\">\r\n        <el-form-item prop=\"username\">\r\n          <el-input v-model=\"loginForm.username\" placeholder=\"请输入用户名\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"password\">\r\n          <el-input type=\"password\" v-model=\"loginForm.password\" placeholder=\"请输入密码\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"handleLogin\" style=\"width: 100%;\">登录</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport axios from 'axios';\r\nimport { ElMessage } from 'element-plus';\r\n\r\nconst router = useRouter();\r\n\r\nconst loginFormRef = ref(null);\r\nconst loginForm = reactive({\r\n  username: '',\r\n  password: ''\r\n});\r\n\r\nconst loginRules = reactive({\r\n  username: [\r\n    { required: true, message: '请输入用户名', trigger: 'blur' }\r\n  ],\r\n  password: [\r\n    { required: true, message: '请输入密码', trigger: 'blur' }\r\n  ]\r\n});\r\n\r\nconst handleLogin = () => {\r\n  loginFormRef.value.validate(async (valid) => {\r\n    if (valid) {\r\n      try {\r\n        const response = await axios.post('/api/auth/login-web', loginForm);\r\n        if (response.data.code === 200) {\r\n          ElMessage.success('登录成功');\r\n          // 假设后端返回token，并存储\r\n          localStorage.setItem('token', response.data.data.token);\r\n          router.push('/home'); // 登录成功后跳转到首页\r\n        } else {\r\n          ElMessage.error(response.data.message || '登录失败');\r\n        }\r\n      } catch (error) {\r\n        console.error('登录请求失败:', error);\r\n        ElMessage.error('登录请求失败，请稍后再试');\r\n      }\r\n    } else {\r\n      ElMessage.warning('请填写完整的登录信息');\r\n      return false;\r\n    }\r\n  });\r\n};\r\n</script>\r\n\r\n<!-- 第一步：添加全局样式（清除 body/html 默认边距，关键！） -->\r\n<style>\r\n/* 全局样式，不加 scoped，作用于整个页面 */\r\nhtml, body {\r\n  margin: 0; /* 清除默认边距，避免内容被挤出视口 */\r\n  padding: 0; /* 清除默认内边距 */\r\n  height: 100%; /* 让 html/body 占满屏幕高度，确保子容器高度生效 */\r\n  overflow: hidden; /* 强制隐藏页面滚动条，彻底禁止上下拉动 */\r\n}\r\n</style>\r\n\r\n<style scoped>\r\n.login-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh; /* 占满当前视口高度（100% Viewport Height） */\r\n  /* 去掉 overflow: hidden; 因为父级已控制滚动，这里无需重复 */\r\n  background-color: #f0f2f5;\r\n}\r\n\r\n.login-card {\r\n  width: 400px;\r\n  padding: 20px;\r\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\r\n  /* 可选：添加最小宽度，防止小屏幕下卡片变形 */\r\n  min-width: 300px;\r\n}\r\n\r\n.card-header {\r\n  text-align: center;\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n}\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAiB;;;;;;;uBAA5BC,mBAAA,CAmBM,OAnBNC,UAmBM,GAlBJC,YAAA,CAiBUC,kBAAA;IAjBDJ,KAAK,EAAC;EAAY;IACdK,MAAM,EAAAC,QAAA,CACf,MAEM,KAAAC,MAAA,QAAAA,MAAA,OAFNC,mBAAA,CAEM;MAFDR,KAAK,EAAC;IAAa,IACtBQ,mBAAA,CAAiB,cAAX,MAAI,E;sBAGd,MAUU,CAVVL,YAAA,CAUUM,kBAAA;MAVAC,KAAK,EAAEC,MAAA,CAAAC,SAAS;MAAGC,KAAK,EAAEF,MAAA,CAAAG,UAAU;MAAEC,GAAG,EAAC,cAAc;MAAC,aAAW,EAAC,KAAK;MAACf,KAAK,EAAC;;wBACzF,MAEe,CAFfG,YAAA,CAEea,uBAAA;QAFDC,IAAI,EAAC;MAAU;0BAC3B,MAAuE,CAAvEd,YAAA,CAAuEe,mBAAA;sBAApDP,MAAA,CAAAC,SAAS,CAACO,QAAQ;qEAAlBR,MAAA,CAAAC,SAAS,CAACO,QAAQ,GAAAC,MAAA;UAAEC,WAAW,EAAC;;;UAErDlB,YAAA,CAEea,uBAAA;QAFDC,IAAI,EAAC;MAAU;0BAC3B,MAAsF,CAAtFd,YAAA,CAAsFe,mBAAA;UAA5EI,IAAI,EAAC,UAAU;sBAAUX,MAAA,CAAAC,SAAS,CAACW,QAAQ;qEAAlBZ,MAAA,CAAAC,SAAS,CAACW,QAAQ,GAAAH,MAAA;UAAEC,WAAW,EAAC;;;UAErElB,YAAA,CAEea,uBAAA;0BADb,MAAkF,CAAlFb,YAAA,CAAkFqB,oBAAA;UAAvEF,IAAI,EAAC,SAAS;UAAEG,OAAK,EAAEd,MAAA,CAAAe,WAAW;UAAEC,KAAoB,EAApB;YAAA;UAAA;;4BAAqB,MAAE,KAAApB,MAAA,QAAAA,MAAA,O,iBAAF,IAAE,mB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}