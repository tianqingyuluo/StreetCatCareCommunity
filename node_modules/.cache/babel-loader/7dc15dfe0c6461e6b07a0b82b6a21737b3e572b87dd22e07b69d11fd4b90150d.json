{"ast":null,"code":"import { defineComponent, useAttrs, inject, ref, computed, watch, nextTick, unref, onBeforeUnmount, provide, openBlock, createBlock, mergeProps, withCtx, normalizeClass, normalizeStyle, withModifiers, resolveDynamicComponent, createCommentVNode, renderSlot, createElementVNode, toDisplayString } from 'vue';\nimport { onClickOutside, unrefElement } from '@vueuse/core';\nimport { ElInput } from '../../../input/index.mjs';\nimport { ElIcon } from '../../../icon/index.mjs';\nimport { ElTooltip } from '../../../tooltip/index.mjs';\nimport { Clock, Calendar } from '@element-plus/icons-vue';\nimport { valueEquals, dayOrDaysToDate } from '../utils.mjs';\nimport { PICKER_POPPER_OPTIONS_INJECTION_KEY, PICKER_BASE_INJECTION_KEY, ROOT_COMMON_PICKER_INJECTION_KEY } from '../constants.mjs';\nimport { useCommonPicker } from '../composables/use-common-picker.mjs';\nimport { timePickerDefaultProps } from './props.mjs';\nimport PickerRangeTrigger from './picker-range-trigger.mjs';\nimport _export_sfc from '../../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useEmptyValues } from '../../../../hooks/use-empty-values/index.mjs';\nimport { UPDATE_MODEL_EVENT, CHANGE_EVENT } from '../../../../constants/event.mjs';\nimport { useNamespace } from '../../../../hooks/use-namespace/index.mjs';\nimport { useFormItem } from '../../../form/src/hooks/use-form-item.mjs';\nimport { useFormDisabled, useFormSize } from '../../../form/src/hooks/use-form-common-props.mjs';\nimport { useFocusController } from '../../../../hooks/use-focus-controller/index.mjs';\nimport { debugWarn } from '../../../../utils/error.mjs';\nimport { isArray, NOOP } from '@vue/shared';\nimport { getEventCode } from '../../../../utils/dom/event.mjs';\nimport { EVENT_CODE } from '../../../../constants/aria.mjs';\nconst __default__ = defineComponent({\n  name: \"Picker\"\n});\nconst _sfc_main = /* @__PURE__ */defineComponent({\n  ...__default__,\n  props: timePickerDefaultProps,\n  emits: [UPDATE_MODEL_EVENT, CHANGE_EVENT, \"focus\", \"blur\", \"clear\", \"calendar-change\", \"panel-change\", \"visible-change\", \"keydown\"],\n  setup(__props, {\n    expose,\n    emit\n  }) {\n    const props = __props;\n    const attrs = useAttrs();\n    const nsDate = useNamespace(\"date\");\n    const nsInput = useNamespace(\"input\");\n    const nsRange = useNamespace(\"range\");\n    const {\n      formItem\n    } = useFormItem();\n    const elPopperOptions = inject(PICKER_POPPER_OPTIONS_INJECTION_KEY, {});\n    const emptyValues = useEmptyValues(props, null);\n    const refPopper = ref();\n    const inputRef = ref();\n    const valueOnOpen = ref(null);\n    let hasJustTabExitedInput = false;\n    const pickerDisabled = useFormDisabled();\n    const commonPicker = useCommonPicker(props, emit);\n    const {\n      parsedValue,\n      pickerActualVisible,\n      userInput,\n      pickerVisible,\n      pickerOptions,\n      valueIsEmpty,\n      emitInput,\n      onPick,\n      onSetPickerOption,\n      onCalendarChange,\n      onPanelChange\n    } = commonPicker;\n    const {\n      isFocused,\n      handleFocus,\n      handleBlur\n    } = useFocusController(inputRef, {\n      disabled: pickerDisabled,\n      beforeFocus() {\n        return props.readonly;\n      },\n      afterFocus() {\n        if (!props.automaticDropdown) return;\n        pickerVisible.value = true;\n      },\n      beforeBlur(event) {\n        var _a;\n        return !hasJustTabExitedInput && ((_a = refPopper.value) == null ? void 0 : _a.isFocusInsideContent(event));\n      },\n      afterBlur() {\n        handleChange();\n        pickerVisible.value = false;\n        hasJustTabExitedInput = false;\n        props.validateEvent && (formItem == null ? void 0 : formItem.validate(\"blur\").catch(err => debugWarn()));\n      }\n    });\n    const hovering = ref(false);\n    const rangeInputKls = computed(() => [nsDate.b(\"editor\"), nsDate.bm(\"editor\", props.type), nsInput.e(\"wrapper\"), nsDate.is(\"disabled\", pickerDisabled.value), nsDate.is(\"active\", pickerVisible.value), nsRange.b(\"editor\"), pickerSize ? nsRange.bm(\"editor\", pickerSize.value) : \"\", attrs.class]);\n    const clearIconKls = computed(() => [nsInput.e(\"icon\"), nsRange.e(\"close-icon\"), !showClearBtn.value ? nsRange.em(\"close-icon\", \"hidden\") : \"\"]);\n    watch(pickerVisible, val => {\n      if (!val) {\n        userInput.value = null;\n        nextTick(() => {\n          emitChange(props.modelValue);\n        });\n      } else {\n        nextTick(() => {\n          if (val) {\n            valueOnOpen.value = props.modelValue;\n          }\n        });\n      }\n    });\n    const emitChange = (val, isClear) => {\n      if (isClear || !valueEquals(val, valueOnOpen.value)) {\n        emit(CHANGE_EVENT, val);\n        isClear && (valueOnOpen.value = val);\n        props.validateEvent && (formItem == null ? void 0 : formItem.validate(\"change\").catch(err => debugWarn()));\n      }\n    };\n    const emitKeydown = e => {\n      emit(\"keydown\", e);\n    };\n    const refInput = computed(() => {\n      if (inputRef.value) {\n        return Array.from(inputRef.value.$el.querySelectorAll(\"input\"));\n      }\n      return [];\n    });\n    const setSelectionRange = (start, end, pos) => {\n      const _inputs = refInput.value;\n      if (!_inputs.length) return;\n      if (!pos || pos === \"min\") {\n        _inputs[0].setSelectionRange(start, end);\n        _inputs[0].focus();\n      } else if (pos === \"max\") {\n        _inputs[1].setSelectionRange(start, end);\n        _inputs[1].focus();\n      }\n    };\n    const onBeforeShow = () => {\n      pickerActualVisible.value = true;\n    };\n    const onShow = () => {\n      emit(\"visible-change\", true);\n    };\n    const onHide = () => {\n      pickerActualVisible.value = false;\n      pickerVisible.value = false;\n      emit(\"visible-change\", false);\n    };\n    const handleOpen = () => {\n      pickerVisible.value = true;\n    };\n    const handleClose = () => {\n      pickerVisible.value = false;\n    };\n    const displayValue = computed(() => {\n      if (!pickerOptions.value.panelReady) return \"\";\n      const formattedValue = formatDayjsToString(parsedValue.value);\n      if (isArray(userInput.value)) {\n        return [userInput.value[0] || formattedValue && formattedValue[0] || \"\", userInput.value[1] || formattedValue && formattedValue[1] || \"\"];\n      } else if (userInput.value !== null) {\n        return userInput.value;\n      }\n      if (!isTimePicker.value && valueIsEmpty.value) return \"\";\n      if (!pickerVisible.value && valueIsEmpty.value) return \"\";\n      if (formattedValue) {\n        return isDatesPicker.value || isMonthsPicker.value || isYearsPicker.value ? formattedValue.join(\", \") : formattedValue;\n      }\n      return \"\";\n    });\n    const isTimeLikePicker = computed(() => props.type.includes(\"time\"));\n    const isTimePicker = computed(() => props.type.startsWith(\"time\"));\n    const isDatesPicker = computed(() => props.type === \"dates\");\n    const isMonthsPicker = computed(() => props.type === \"months\");\n    const isYearsPicker = computed(() => props.type === \"years\");\n    const triggerIcon = computed(() => props.prefixIcon || (isTimeLikePicker.value ? Clock : Calendar));\n    const showClearBtn = computed(() => props.clearable && !pickerDisabled.value && !props.readonly && !valueIsEmpty.value && (hovering.value || isFocused.value));\n    const onClearIconClick = event => {\n      if (props.readonly || pickerDisabled.value) return;\n      if (showClearBtn.value) {\n        event.stopPropagation();\n        if (pickerOptions.value.handleClear) {\n          pickerOptions.value.handleClear();\n        } else {\n          emitInput(emptyValues.valueOnClear.value);\n        }\n        emitChange(emptyValues.valueOnClear.value, true);\n        onHide();\n      }\n      emit(\"clear\");\n    };\n    const onMouseDownInput = async event => {\n      var _a;\n      if (props.readonly || pickerDisabled.value) return;\n      if (((_a = event.target) == null ? void 0 : _a.tagName) !== \"INPUT\" || isFocused.value || !props.automaticDropdown) {\n        pickerVisible.value = true;\n      }\n    };\n    const onMouseEnter = () => {\n      if (props.readonly || pickerDisabled.value) return;\n      if (!valueIsEmpty.value && props.clearable) {\n        hovering.value = true;\n      }\n    };\n    const onMouseLeave = () => {\n      hovering.value = false;\n    };\n    const onTouchStartInput = event => {\n      var _a;\n      if (props.readonly || pickerDisabled.value) return;\n      if (((_a = event.touches[0].target) == null ? void 0 : _a.tagName) !== \"INPUT\" || isFocused.value || !props.automaticDropdown) {\n        pickerVisible.value = true;\n      }\n    };\n    const isRangeInput = computed(() => {\n      return props.type.includes(\"range\");\n    });\n    const pickerSize = useFormSize();\n    const popperEl = computed(() => {\n      var _a, _b;\n      return (_b = (_a = unref(refPopper)) == null ? void 0 : _a.popperRef) == null ? void 0 : _b.contentRef;\n    });\n    const stophandle = onClickOutside(inputRef, e => {\n      const unrefedPopperEl = unref(popperEl);\n      const inputEl = unrefElement(inputRef);\n      if (unrefedPopperEl && (e.target === unrefedPopperEl || e.composedPath().includes(unrefedPopperEl)) || e.target === inputEl || inputEl && e.composedPath().includes(inputEl)) return;\n      pickerVisible.value = false;\n    });\n    onBeforeUnmount(() => {\n      stophandle == null ? void 0 : stophandle();\n    });\n    const handleChange = () => {\n      if (userInput.value) {\n        const value = parseUserInputToDayjs(displayValue.value);\n        if (value) {\n          if (isValidValue(value)) {\n            emitInput(dayOrDaysToDate(value));\n            userInput.value = null;\n          }\n        }\n      }\n      if (userInput.value === \"\") {\n        emitInput(emptyValues.valueOnClear.value);\n        emitChange(emptyValues.valueOnClear.value, true);\n        userInput.value = null;\n      }\n    };\n    const parseUserInputToDayjs = value => {\n      if (!value) return null;\n      return pickerOptions.value.parseUserInput(value);\n    };\n    const formatDayjsToString = value => {\n      if (!value) return null;\n      return pickerOptions.value.formatToString(value);\n    };\n    const isValidValue = value => {\n      return pickerOptions.value.isValidValue(value);\n    };\n    const handleKeydownInput = async event => {\n      if (props.readonly || pickerDisabled.value) return;\n      const code = getEventCode(event);\n      emitKeydown(event);\n      if (code === EVENT_CODE.esc) {\n        if (pickerVisible.value === true) {\n          pickerVisible.value = false;\n          event.preventDefault();\n          event.stopPropagation();\n        }\n        return;\n      }\n      if (code === EVENT_CODE.down) {\n        if (pickerOptions.value.handleFocusPicker) {\n          event.preventDefault();\n          event.stopPropagation();\n        }\n        if (pickerVisible.value === false) {\n          pickerVisible.value = true;\n          await nextTick();\n        }\n        if (pickerOptions.value.handleFocusPicker) {\n          pickerOptions.value.handleFocusPicker();\n          return;\n        }\n      }\n      if (code === EVENT_CODE.tab) {\n        hasJustTabExitedInput = true;\n        return;\n      }\n      if (code === EVENT_CODE.enter || code === EVENT_CODE.numpadEnter) {\n        if (!pickerVisible.value) {\n          pickerVisible.value = true;\n        } else if (userInput.value === null || userInput.value === \"\" || isValidValue(parseUserInputToDayjs(displayValue.value))) {\n          handleChange();\n          pickerVisible.value = false;\n        }\n        event.preventDefault();\n        event.stopPropagation();\n        return;\n      }\n      if (userInput.value) {\n        event.stopPropagation();\n        return;\n      }\n      if (pickerOptions.value.handleKeydownInput) {\n        pickerOptions.value.handleKeydownInput(event);\n      }\n    };\n    const onUserInput = e => {\n      userInput.value = e;\n      if (!pickerVisible.value) {\n        pickerVisible.value = true;\n      }\n    };\n    const handleStartInput = event => {\n      const target = event.target;\n      if (userInput.value) {\n        userInput.value = [target.value, userInput.value[1]];\n      } else {\n        userInput.value = [target.value, null];\n      }\n    };\n    const handleEndInput = event => {\n      const target = event.target;\n      if (userInput.value) {\n        userInput.value = [userInput.value[0], target.value];\n      } else {\n        userInput.value = [null, target.value];\n      }\n    };\n    const handleStartChange = () => {\n      var _a;\n      const values = userInput.value;\n      const value = parseUserInputToDayjs(values && values[0]);\n      const parsedVal = unref(parsedValue);\n      if (value && value.isValid()) {\n        userInput.value = [formatDayjsToString(value), ((_a = displayValue.value) == null ? void 0 : _a[1]) || null];\n        const newValue = [value, parsedVal && (parsedVal[1] || null)];\n        if (isValidValue(newValue)) {\n          emitInput(dayOrDaysToDate(newValue));\n          userInput.value = null;\n        }\n      }\n    };\n    const handleEndChange = () => {\n      var _a;\n      const values = unref(userInput);\n      const value = parseUserInputToDayjs(values && values[1]);\n      const parsedVal = unref(parsedValue);\n      if (value && value.isValid()) {\n        userInput.value = [((_a = unref(displayValue)) == null ? void 0 : _a[0]) || null, formatDayjsToString(value)];\n        const newValue = [parsedVal && parsedVal[0], value];\n        if (isValidValue(newValue)) {\n          emitInput(dayOrDaysToDate(newValue));\n          userInput.value = null;\n        }\n      }\n    };\n    const focus = () => {\n      var _a;\n      (_a = inputRef.value) == null ? void 0 : _a.focus();\n    };\n    const blur = () => {\n      var _a;\n      (_a = inputRef.value) == null ? void 0 : _a.blur();\n    };\n    provide(PICKER_BASE_INJECTION_KEY, {\n      props,\n      emptyValues\n    });\n    provide(ROOT_COMMON_PICKER_INJECTION_KEY, commonPicker);\n    expose({\n      focus,\n      blur,\n      handleOpen,\n      handleClose,\n      onPick\n    });\n    return (_ctx, _cache) => {\n      return openBlock(), createBlock(unref(ElTooltip), mergeProps({\n        ref_key: \"refPopper\",\n        ref: refPopper,\n        visible: unref(pickerVisible),\n        effect: \"light\",\n        pure: \"\",\n        trigger: \"click\"\n      }, _ctx.$attrs, {\n        role: \"dialog\",\n        teleported: \"\",\n        transition: `${unref(nsDate).namespace.value}-zoom-in-top`,\n        \"popper-class\": [`${unref(nsDate).namespace.value}-picker__popper`, _ctx.popperClass],\n        \"popper-style\": _ctx.popperStyle,\n        \"popper-options\": unref(elPopperOptions),\n        \"fallback-placements\": _ctx.fallbackPlacements,\n        \"gpu-acceleration\": false,\n        placement: _ctx.placement,\n        \"stop-popper-mouse-event\": false,\n        \"hide-after\": 0,\n        persistent: \"\",\n        onBeforeShow,\n        onShow,\n        onHide\n      }), {\n        default: withCtx(() => [!unref(isRangeInput) ? (openBlock(), createBlock(unref(ElInput), {\n          key: 0,\n          id: _ctx.id,\n          ref_key: \"inputRef\",\n          ref: inputRef,\n          \"container-role\": \"combobox\",\n          \"model-value\": unref(displayValue),\n          name: _ctx.name,\n          size: unref(pickerSize),\n          disabled: unref(pickerDisabled),\n          placeholder: _ctx.placeholder,\n          class: normalizeClass([unref(nsDate).b(\"editor\"), unref(nsDate).bm(\"editor\", _ctx.type), unref(nsDate).is(\"focus\", unref(pickerVisible)), _ctx.$attrs.class]),\n          style: normalizeStyle(_ctx.$attrs.style),\n          readonly: !_ctx.editable || _ctx.readonly || unref(isDatesPicker) || unref(isMonthsPicker) || unref(isYearsPicker) || _ctx.type === \"week\",\n          \"aria-label\": _ctx.ariaLabel,\n          tabindex: _ctx.tabindex,\n          \"validate-event\": false,\n          onInput: onUserInput,\n          onFocus: unref(handleFocus),\n          onBlur: unref(handleBlur),\n          onKeydown: handleKeydownInput,\n          onChange: handleChange,\n          onMousedown: onMouseDownInput,\n          onMouseenter: onMouseEnter,\n          onMouseleave: onMouseLeave,\n          onTouchstartPassive: onTouchStartInput,\n          onClick: withModifiers(() => {}, [\"stop\"])\n        }, {\n          prefix: withCtx(() => [unref(triggerIcon) ? (openBlock(), createBlock(unref(ElIcon), {\n            key: 0,\n            class: normalizeClass(unref(nsInput).e(\"icon\")),\n            onMousedown: withModifiers(onMouseDownInput, [\"prevent\"]),\n            onTouchstartPassive: onTouchStartInput\n          }, {\n            default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(unref(triggerIcon))))]),\n            _: 1\n          }, 8, [\"class\", \"onMousedown\"])) : createCommentVNode(\"v-if\", true)]),\n          suffix: withCtx(() => [unref(showClearBtn) && _ctx.clearIcon ? (openBlock(), createBlock(unref(ElIcon), {\n            key: 0,\n            class: normalizeClass(`${unref(nsInput).e(\"icon\")} clear-icon`),\n            onMousedown: withModifiers(unref(NOOP), [\"prevent\"]),\n            onClick: onClearIconClick\n          }, {\n            default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.clearIcon)))]),\n            _: 1\n          }, 8, [\"class\", \"onMousedown\"])) : createCommentVNode(\"v-if\", true)]),\n          _: 1\n        }, 8, [\"id\", \"model-value\", \"name\", \"size\", \"disabled\", \"placeholder\", \"class\", \"style\", \"readonly\", \"aria-label\", \"tabindex\", \"onFocus\", \"onBlur\", \"onClick\"])) : (openBlock(), createBlock(PickerRangeTrigger, {\n          key: 1,\n          id: _ctx.id,\n          ref_key: \"inputRef\",\n          ref: inputRef,\n          \"model-value\": unref(displayValue),\n          name: _ctx.name,\n          disabled: unref(pickerDisabled),\n          readonly: !_ctx.editable || _ctx.readonly,\n          \"start-placeholder\": _ctx.startPlaceholder,\n          \"end-placeholder\": _ctx.endPlaceholder,\n          class: normalizeClass(unref(rangeInputKls)),\n          style: normalizeStyle(_ctx.$attrs.style),\n          \"aria-label\": _ctx.ariaLabel,\n          tabindex: _ctx.tabindex,\n          autocomplete: \"off\",\n          role: \"combobox\",\n          onClick: onMouseDownInput,\n          onFocus: unref(handleFocus),\n          onBlur: unref(handleBlur),\n          onStartInput: handleStartInput,\n          onStartChange: handleStartChange,\n          onEndInput: handleEndInput,\n          onEndChange: handleEndChange,\n          onMousedown: onMouseDownInput,\n          onMouseenter: onMouseEnter,\n          onMouseleave: onMouseLeave,\n          onTouchstartPassive: onTouchStartInput,\n          onKeydown: handleKeydownInput\n        }, {\n          prefix: withCtx(() => [unref(triggerIcon) ? (openBlock(), createBlock(unref(ElIcon), {\n            key: 0,\n            class: normalizeClass([unref(nsInput).e(\"icon\"), unref(nsRange).e(\"icon\")])\n          }, {\n            default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(unref(triggerIcon))))]),\n            _: 1\n          }, 8, [\"class\"])) : createCommentVNode(\"v-if\", true)]),\n          \"range-separator\": withCtx(() => [renderSlot(_ctx.$slots, \"range-separator\", {}, () => [createElementVNode(\"span\", {\n            class: normalizeClass(unref(nsRange).b(\"separator\"))\n          }, toDisplayString(_ctx.rangeSeparator), 3)])]),\n          suffix: withCtx(() => [_ctx.clearIcon ? (openBlock(), createBlock(unref(ElIcon), {\n            key: 0,\n            class: normalizeClass(unref(clearIconKls)),\n            onMousedown: withModifiers(unref(NOOP), [\"prevent\"]),\n            onClick: onClearIconClick\n          }, {\n            default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.clearIcon)))]),\n            _: 1\n          }, 8, [\"class\", \"onMousedown\"])) : createCommentVNode(\"v-if\", true)]),\n          _: 3\n        }, 8, [\"id\", \"model-value\", \"name\", \"disabled\", \"readonly\", \"start-placeholder\", \"end-placeholder\", \"class\", \"style\", \"aria-label\", \"tabindex\", \"onFocus\", \"onBlur\"]))]),\n        content: withCtx(() => [renderSlot(_ctx.$slots, \"default\", {\n          visible: unref(pickerVisible),\n          actualVisible: unref(pickerActualVisible),\n          parsedValue: unref(parsedValue),\n          format: _ctx.format,\n          dateFormat: _ctx.dateFormat,\n          timeFormat: _ctx.timeFormat,\n          unlinkPanels: _ctx.unlinkPanels,\n          type: _ctx.type,\n          defaultValue: _ctx.defaultValue,\n          showNow: _ctx.showNow,\n          showConfirm: _ctx.showConfirm,\n          showFooter: _ctx.showFooter,\n          showWeekNumber: _ctx.showWeekNumber,\n          onPick: unref(onPick),\n          onSelectRange: setSelectionRange,\n          onSetPickerOption: unref(onSetPickerOption),\n          onCalendarChange: unref(onCalendarChange),\n          onPanelChange: unref(onPanelChange),\n          onMousedown: withModifiers(() => {}, [\"stop\"])\n        })]),\n        _: 3\n      }, 16, [\"visible\", \"transition\", \"popper-class\", \"popper-style\", \"popper-options\", \"fallback-placements\", \"placement\"]);\n    };\n  }\n});\nvar CommonPicker = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"picker.vue\"]]);\nexport { CommonPicker as default };","map":{"version":3,"names":["name","attrs","useAttrs","nsDate","useNamespace","nsInput","nsRange","formItem","useFormItem","elPopperOptions","inject","PICKER_POPPER_OPTIONS_INJECTION_KEY","emptyValues","useEmptyValues","props","refPopper","ref","inputRef","valueOnOpen","hasJustTabExitedInput","pickerDisabled","useFormDisabled","commonPicker","useCommonPicker","emit","parsedValue","pickerActualVisible","userInput","pickerVisible","pickerOptions","valueIsEmpty","emitInput","onPick","onSetPickerOption","onCalendarChange","onPanelChange","isFocused","handleFocus","handleBlur","useFocusController","disabled","beforeFocus","readonly","afterFocus","automaticDropdown","value","beforeBlur","event","_a","isFocusInsideContent","afterBlur","handleChange","validateEvent","validate","catch","err","debugWarn","hovering","rangeInputKls","computed","b","bm","type","e","is","pickerSize","class","clearIconKls","showClearBtn","em","watch","val","nextTick","emitChange","modelValue","isClear","valueEquals","CHANGE_EVENT","emitKeydown","refInput","Array","from","$el","querySelectorAll","setSelectionRange","start","end","pos","_inputs","length","focus","onBeforeShow","onShow","onHide","handleOpen","handleClose","displayValue","panelReady","formattedValue","formatDayjsToString","isArray","isTimePicker","isDatesPicker","isMonthsPicker","isYearsPicker","join","isTimeLikePicker","includes","startsWith","triggerIcon","prefixIcon","Clock","Calendar","clearable","onClearIconClick","stopPropagation","handleClear","valueOnClear","onMouseDownInput","target","tagName","onMouseEnter","onMouseLeave","onTouchStartInput","touches","isRangeInput","useFormSize","popperEl","_b","unref","popperRef","contentRef","stophandle","onClickOutside","unrefedPopperEl","inputEl","unrefElement","composedPath","onBeforeUnmount","parseUserInputToDayjs","isValidValue","dayOrDaysToDate","parseUserInput","formatToString","handleKeydownInput","code","getEventCode","EVENT_CODE","esc","preventDefault","down","handleFocusPicker","tab","enter","numpadEnter","onUserInput","handleStartInput","handleEndInput","handleStartChange","values","parsedVal","isValid","newValue","handleEndChange","blur","provide","PICKER_BASE_INJECTION_KEY","ROOT_COMMON_PICKER_INJECTION_KEY","expose","_ctx","_cache","openBlock","createBlock","ElTooltip","mergeProps","ref_key","visible","effect","pure","trigger"],"sources":["../../../../../../../packages/components/time-picker/src/common/picker.vue"],"sourcesContent":["<template>\n  <el-tooltip\n    ref=\"refPopper\"\n    :visible=\"pickerVisible\"\n    effect=\"light\"\n    pure\n    trigger=\"click\"\n    v-bind=\"$attrs\"\n    role=\"dialog\"\n    teleported\n    :transition=\"`${nsDate.namespace.value}-zoom-in-top`\"\n    :popper-class=\"[`${nsDate.namespace.value}-picker__popper`, popperClass!]\"\n    :popper-style=\"popperStyle\"\n    :popper-options=\"elPopperOptions\"\n    :fallback-placements=\"fallbackPlacements\"\n    :gpu-acceleration=\"false\"\n    :placement=\"placement\"\n    :stop-popper-mouse-event=\"false\"\n    :hide-after=\"0\"\n    persistent\n    @before-show=\"onBeforeShow\"\n    @show=\"onShow\"\n    @hide=\"onHide\"\n  >\n    <template #default>\n      <el-input\n        v-if=\"!isRangeInput\"\n        :id=\"(id as string | undefined)\"\n        ref=\"inputRef\"\n        container-role=\"combobox\"\n        :model-value=\"(displayValue as string)\"\n        :name=\"(name as string | undefined)\"\n        :size=\"pickerSize\"\n        :disabled=\"pickerDisabled\"\n        :placeholder=\"placeholder\"\n        :class=\"[\n          nsDate.b('editor'),\n          nsDate.bm('editor', type),\n          nsDate.is('focus', pickerVisible),\n          $attrs.class,\n        ]\"\n        :style=\"$attrs.style\"\n        :readonly=\"\n          !editable ||\n          readonly ||\n          isDatesPicker ||\n          isMonthsPicker ||\n          isYearsPicker ||\n          type === 'week'\n        \"\n        :aria-label=\"ariaLabel\"\n        :tabindex=\"tabindex\"\n        :validate-event=\"false\"\n        @input=\"onUserInput\"\n        @focus=\"handleFocus\"\n        @blur=\"handleBlur\"\n        @keydown=\"handleKeydownInput\"\n        @change=\"handleChange\"\n        @mousedown=\"onMouseDownInput\"\n        @mouseenter=\"onMouseEnter\"\n        @mouseleave=\"onMouseLeave\"\n        @touchstart.passive=\"onTouchStartInput\"\n        @click.stop\n      >\n        <template #prefix>\n          <el-icon\n            v-if=\"triggerIcon\"\n            :class=\"nsInput.e('icon')\"\n            @mousedown.prevent=\"onMouseDownInput\"\n            @touchstart.passive=\"onTouchStartInput\"\n          >\n            <component :is=\"triggerIcon\" />\n          </el-icon>\n        </template>\n        <template #suffix>\n          <el-icon\n            v-if=\"showClearBtn && clearIcon\"\n            :class=\"`${nsInput.e('icon')} clear-icon`\"\n            @mousedown.prevent=\"NOOP\"\n            @click=\"onClearIconClick\"\n          >\n            <component :is=\"clearIcon\" />\n          </el-icon>\n        </template>\n      </el-input>\n      <picker-range-trigger\n        v-else\n        :id=\"(id as string[] | undefined)\"\n        ref=\"inputRef\"\n        :model-value=\"displayValue\"\n        :name=\"(name as string[] | undefined)\"\n        :disabled=\"pickerDisabled\"\n        :readonly=\"!editable || readonly\"\n        :start-placeholder=\"startPlaceholder\"\n        :end-placeholder=\"endPlaceholder\"\n        :class=\"rangeInputKls\"\n        :style=\"$attrs.style\"\n        :aria-label=\"ariaLabel\"\n        :tabindex=\"tabindex\"\n        autocomplete=\"off\"\n        role=\"combobox\"\n        @click=\"onMouseDownInput\"\n        @focus=\"handleFocus\"\n        @blur=\"handleBlur\"\n        @start-input=\"handleStartInput\"\n        @start-change=\"handleStartChange\"\n        @end-input=\"handleEndInput\"\n        @end-change=\"handleEndChange\"\n        @mousedown=\"onMouseDownInput\"\n        @mouseenter=\"onMouseEnter\"\n        @mouseleave=\"onMouseLeave\"\n        @touchstart.passive=\"onTouchStartInput\"\n        @keydown=\"handleKeydownInput\"\n      >\n        <template #prefix>\n          <el-icon\n            v-if=\"triggerIcon\"\n            :class=\"[nsInput.e('icon'), nsRange.e('icon')]\"\n          >\n            <component :is=\"triggerIcon\" />\n          </el-icon>\n        </template>\n        <template #range-separator>\n          <slot name=\"range-separator\">\n            <span :class=\"nsRange.b('separator')\">{{ rangeSeparator }}</span>\n          </slot>\n        </template>\n        <template #suffix>\n          <el-icon\n            v-if=\"clearIcon\"\n            :class=\"clearIconKls\"\n            @mousedown.prevent=\"NOOP\"\n            @click=\"onClearIconClick\"\n          >\n            <component :is=\"clearIcon\" />\n          </el-icon>\n        </template>\n      </picker-range-trigger>\n    </template>\n    <template #content>\n      <slot\n        :visible=\"pickerVisible\"\n        :actual-visible=\"pickerActualVisible\"\n        :parsed-value=\"parsedValue\"\n        :format=\"format\"\n        :date-format=\"dateFormat\"\n        :time-format=\"timeFormat\"\n        :unlink-panels=\"unlinkPanels\"\n        :type=\"type\"\n        :default-value=\"defaultValue\"\n        :show-now=\"showNow\"\n        :show-confirm=\"showConfirm\"\n        :show-footer=\"showFooter\"\n        :show-week-number=\"showWeekNumber\"\n        @pick=\"onPick\"\n        @select-range=\"setSelectionRange\"\n        @set-picker-option=\"onSetPickerOption\"\n        @calendar-change=\"onCalendarChange\"\n        @panel-change=\"onPanelChange\"\n        @mousedown.stop\n      />\n    </template>\n  </el-tooltip>\n</template>\n\n<script lang=\"ts\" setup>\nimport {\n  computed,\n  inject,\n  nextTick,\n  onBeforeUnmount,\n  provide,\n  ref,\n  unref,\n  useAttrs,\n  watch,\n} from 'vue'\nimport { onClickOutside, unrefElement } from '@vueuse/core'\nimport {\n  useEmptyValues,\n  useFocusController,\n  useNamespace,\n} from '@element-plus/hooks'\nimport {\n  useFormDisabled,\n  useFormItem,\n  useFormSize,\n} from '@element-plus/components/form'\nimport ElInput from '@element-plus/components/input'\nimport ElIcon from '@element-plus/components/icon'\nimport ElTooltip from '@element-plus/components/tooltip'\nimport { NOOP, debugWarn, getEventCode, isArray } from '@element-plus/utils'\nimport {\n  CHANGE_EVENT,\n  EVENT_CODE,\n  UPDATE_MODEL_EVENT,\n} from '@element-plus/constants'\nimport { Calendar, Clock } from '@element-plus/icons-vue'\nimport { dayOrDaysToDate, valueEquals } from '../utils'\nimport {\n  PICKER_BASE_INJECTION_KEY,\n  PICKER_POPPER_OPTIONS_INJECTION_KEY,\n  ROOT_COMMON_PICKER_INJECTION_KEY,\n} from '../constants'\nimport { useCommonPicker } from '../composables/use-common-picker'\nimport { timePickerDefaultProps } from './props'\nimport PickerRangeTrigger from './picker-range-trigger.vue'\n\nimport type { InputInstance } from '@element-plus/components/input'\nimport type { Dayjs } from 'dayjs'\nimport type { ComponentPublicInstance, Ref } from 'vue'\nimport type { Options } from '@popperjs/core'\nimport type { DayOrDays, TimePickerDefaultProps, UserInput } from './props'\nimport type { TooltipInstance } from '@element-plus/components/tooltip'\n\ndefineOptions({\n  name: 'Picker',\n})\n\nconst props = defineProps(timePickerDefaultProps)\nconst emit = defineEmits([\n  UPDATE_MODEL_EVENT,\n  CHANGE_EVENT,\n  'focus',\n  'blur',\n  'clear',\n  'calendar-change',\n  'panel-change',\n  'visible-change',\n  'keydown',\n])\nconst attrs = useAttrs()\n\nconst nsDate = useNamespace('date')\nconst nsInput = useNamespace('input')\nconst nsRange = useNamespace('range')\n\nconst { formItem } = useFormItem()\nconst elPopperOptions = inject(\n  PICKER_POPPER_OPTIONS_INJECTION_KEY,\n  {} as Options\n)\nconst emptyValues = useEmptyValues(props, null)\n\nconst refPopper = ref<TooltipInstance>()\nconst inputRef = ref<InputInstance>()\nconst valueOnOpen = ref<TimePickerDefaultProps['modelValue'] | null>(null)\nlet hasJustTabExitedInput = false\n\nconst pickerDisabled = useFormDisabled()\n\nconst commonPicker = useCommonPicker(props, emit)\nconst {\n  parsedValue,\n  pickerActualVisible,\n  userInput,\n  pickerVisible,\n  pickerOptions,\n  valueIsEmpty,\n  emitInput,\n  onPick,\n  //@ts-ignore\n  onSetPickerOption,\n  //@ts-ignore\n  onCalendarChange,\n  //@ts-ignore\n  onPanelChange,\n} = commonPicker\n\nconst { isFocused, handleFocus, handleBlur } = useFocusController(inputRef, {\n  disabled: pickerDisabled,\n  beforeFocus() {\n    return props.readonly\n  },\n  afterFocus() {\n    if (!props.automaticDropdown) return\n    pickerVisible.value = true\n  },\n  beforeBlur(event) {\n    return (\n      !hasJustTabExitedInput && refPopper.value?.isFocusInsideContent(event)\n    )\n  },\n  afterBlur() {\n    handleChange()\n    pickerVisible.value = false\n    hasJustTabExitedInput = false\n    props.validateEvent &&\n      formItem?.validate('blur').catch((err) => debugWarn(err))\n  },\n})\n\nconst hovering = ref(false)\n\nconst rangeInputKls = computed(() => [\n  nsDate.b('editor'),\n  nsDate.bm('editor', props.type),\n  nsInput.e('wrapper'),\n  nsDate.is('disabled', pickerDisabled.value),\n  nsDate.is('active', pickerVisible.value),\n  nsRange.b('editor'),\n  pickerSize ? nsRange.bm('editor', pickerSize.value) : '',\n  attrs.class,\n])\n\nconst clearIconKls = computed(() => [\n  nsInput.e('icon'),\n  nsRange.e('close-icon'),\n  !showClearBtn.value ? nsRange.em('close-icon', 'hidden') : '',\n])\n\nwatch(pickerVisible, (val) => {\n  if (!val) {\n    userInput.value = null\n    nextTick(() => {\n      emitChange(props.modelValue)\n    })\n  } else {\n    nextTick(() => {\n      if (val) {\n        valueOnOpen.value = props.modelValue\n      }\n    })\n  }\n})\nconst emitChange = (\n  val: TimePickerDefaultProps['modelValue'] | null,\n  isClear?: boolean\n) => {\n  // determine user real change only\n  if (isClear || !valueEquals(val, valueOnOpen.value)) {\n    emit(CHANGE_EVENT, val)\n    // Set the value of valueOnOpen when clearing to avoid triggering change events multiple times.\n    isClear && (valueOnOpen.value = val)\n    props.validateEvent &&\n      formItem?.validate('change').catch((err) => debugWarn(err))\n  }\n}\nconst emitKeydown = (e: KeyboardEvent) => {\n  emit('keydown', e)\n}\n\nconst refInput = computed<HTMLInputElement[]>(() => {\n  if (inputRef.value) {\n    return Array.from<HTMLInputElement>(\n      inputRef.value.$el.querySelectorAll('input')\n    )\n  }\n  return []\n})\n\n// @ts-ignore\nconst setSelectionRange = (start: number, end: number, pos?: 'min' | 'max') => {\n  const _inputs = refInput.value\n  if (!_inputs.length) return\n  if (!pos || pos === 'min') {\n    _inputs[0].setSelectionRange(start, end)\n    _inputs[0].focus()\n  } else if (pos === 'max') {\n    _inputs[1].setSelectionRange(start, end)\n    _inputs[1].focus()\n  }\n}\n\nconst onBeforeShow = () => {\n  pickerActualVisible.value = true\n}\n\nconst onShow = () => {\n  emit('visible-change', true)\n}\n\nconst onHide = () => {\n  pickerActualVisible.value = false\n  pickerVisible.value = false\n  emit('visible-change', false)\n}\n\nconst handleOpen = () => {\n  pickerVisible.value = true\n}\n\nconst handleClose = () => {\n  pickerVisible.value = false\n}\n\nconst displayValue = computed<UserInput>(() => {\n  if (!pickerOptions.value.panelReady) return ''\n  const formattedValue = formatDayjsToString(parsedValue.value)\n  if (isArray(userInput.value)) {\n    return [\n      userInput.value[0] || (formattedValue && formattedValue[0]) || '',\n      userInput.value[1] || (formattedValue && formattedValue[1]) || '',\n    ]\n  } else if (userInput.value !== null) {\n    return userInput.value\n  }\n  if (!isTimePicker.value && valueIsEmpty.value) return ''\n  if (!pickerVisible.value && valueIsEmpty.value) return ''\n  if (formattedValue) {\n    return isDatesPicker.value || isMonthsPicker.value || isYearsPicker.value\n      ? (formattedValue as Array<string>).join(', ')\n      : formattedValue\n  }\n  return ''\n})\n\nconst isTimeLikePicker = computed(() => props.type.includes('time'))\n\nconst isTimePicker = computed(() => props.type.startsWith('time'))\n\nconst isDatesPicker = computed(() => props.type === 'dates')\n\nconst isMonthsPicker = computed(() => props.type === 'months')\n\nconst isYearsPicker = computed(() => props.type === 'years')\n\nconst triggerIcon = computed(\n  () => props.prefixIcon || (isTimeLikePicker.value ? Clock : Calendar)\n)\n\nconst showClearBtn = computed(\n  () =>\n    props.clearable &&\n    !pickerDisabled.value &&\n    !props.readonly &&\n    !valueIsEmpty.value &&\n    (hovering.value || isFocused.value)\n)\n\nconst onClearIconClick = (event: MouseEvent) => {\n  if (props.readonly || pickerDisabled.value) return\n  if (showClearBtn.value) {\n    event.stopPropagation()\n    // When the handleClear Function was provided, emit null will be executed inside it\n    // There is no need for us to execute emit null twice. #14752\n    if (pickerOptions.value.handleClear) {\n      pickerOptions.value.handleClear()\n    } else {\n      emitInput(emptyValues.valueOnClear.value)\n    }\n    emitChange(emptyValues.valueOnClear.value, true)\n    onHide()\n  }\n  emit('clear')\n}\n\nconst onMouseDownInput = async (event: MouseEvent) => {\n  if (props.readonly || pickerDisabled.value) return\n  if (\n    (event.target as HTMLElement)?.tagName !== 'INPUT' ||\n    isFocused.value ||\n    !props.automaticDropdown\n  ) {\n    pickerVisible.value = true\n  }\n}\nconst onMouseEnter = () => {\n  if (props.readonly || pickerDisabled.value) return\n  if (!valueIsEmpty.value && props.clearable) {\n    hovering.value = true\n  }\n}\nconst onMouseLeave = () => {\n  hovering.value = false\n}\n\nconst onTouchStartInput = (event: TouchEvent) => {\n  if (props.readonly || pickerDisabled.value) return\n  if (\n    (event.touches[0].target as HTMLElement)?.tagName !== 'INPUT' ||\n    isFocused.value ||\n    !props.automaticDropdown\n  ) {\n    pickerVisible.value = true\n  }\n}\n\nconst isRangeInput = computed(() => {\n  return props.type.includes('range')\n})\n\nconst pickerSize = useFormSize()\n\nconst popperEl = computed(() => unref(refPopper)?.popperRef?.contentRef)\n\nconst stophandle = onClickOutside(\n  inputRef as Ref<ComponentPublicInstance>,\n  (e: PointerEvent) => {\n    const unrefedPopperEl = unref(popperEl)\n    const inputEl = unrefElement(inputRef as Ref<ComponentPublicInstance>)\n    if (\n      (unrefedPopperEl &&\n        (e.target === unrefedPopperEl ||\n          e.composedPath().includes(unrefedPopperEl))) ||\n      e.target === inputEl ||\n      (inputEl && e.composedPath().includes(inputEl))\n    )\n      return\n    pickerVisible.value = false\n  }\n)\n\nonBeforeUnmount(() => {\n  stophandle?.()\n})\n\nconst handleChange = () => {\n  if (userInput.value) {\n    const value = parseUserInputToDayjs(displayValue.value)\n    if (value) {\n      if (isValidValue(value)) {\n        emitInput(dayOrDaysToDate(value))\n        userInput.value = null\n      }\n    }\n  }\n  if (userInput.value === '') {\n    emitInput(emptyValues.valueOnClear.value)\n    emitChange(emptyValues.valueOnClear.value, true)\n    userInput.value = null\n  }\n}\n\nconst parseUserInputToDayjs = (value: UserInput) => {\n  if (!value) return null\n  return pickerOptions.value.parseUserInput!(value)\n}\n\nconst formatDayjsToString = (value: DayOrDays) => {\n  if (!value) return null\n  return pickerOptions.value.formatToString!(value)\n}\n\nconst isValidValue = (value: DayOrDays) => {\n  return pickerOptions.value.isValidValue!(value)\n}\n\nconst handleKeydownInput = async (event: Event | KeyboardEvent) => {\n  if (props.readonly || pickerDisabled.value) return\n\n  const code = getEventCode(event as KeyboardEvent)\n  emitKeydown(event as KeyboardEvent)\n  if (code === EVENT_CODE.esc) {\n    if (pickerVisible.value === true) {\n      pickerVisible.value = false\n      event.preventDefault()\n      event.stopPropagation()\n    }\n    return\n  }\n\n  if (code === EVENT_CODE.down) {\n    if (pickerOptions.value.handleFocusPicker) {\n      event.preventDefault()\n      event.stopPropagation()\n    }\n    if (pickerVisible.value === false) {\n      pickerVisible.value = true\n      await nextTick()\n    }\n    if (pickerOptions.value.handleFocusPicker) {\n      pickerOptions.value.handleFocusPicker()\n      return\n    }\n  }\n\n  if (code === EVENT_CODE.tab) {\n    hasJustTabExitedInput = true\n    return\n  }\n\n  if (code === EVENT_CODE.enter || code === EVENT_CODE.numpadEnter) {\n    if (!pickerVisible.value) {\n      pickerVisible.value = true\n    } else if (\n      userInput.value === null ||\n      userInput.value === '' ||\n      isValidValue(parseUserInputToDayjs(displayValue.value) as DayOrDays)\n    ) {\n      handleChange()\n      pickerVisible.value = false\n    }\n    event.preventDefault()\n    event.stopPropagation()\n    return\n  }\n\n  // if user is typing, do not let picker handle key input\n  if (userInput.value) {\n    event.stopPropagation()\n    return\n  }\n  if (pickerOptions.value.handleKeydownInput) {\n    pickerOptions.value.handleKeydownInput(event as KeyboardEvent)\n  }\n}\nconst onUserInput = (e: string) => {\n  userInput.value = e\n  // Temporary fix when the picker is dismissed and the input box\n  // is focused, just mimic the behavior of antdesign.\n  if (!pickerVisible.value) {\n    pickerVisible.value = true\n  }\n}\n\nconst handleStartInput = (event: Event) => {\n  const target = event.target as HTMLInputElement\n  if (userInput.value) {\n    userInput.value = [target.value, userInput.value[1]]\n  } else {\n    userInput.value = [target.value, null]\n  }\n}\n\nconst handleEndInput = (event: Event) => {\n  const target = event.target as HTMLInputElement\n  if (userInput.value) {\n    userInput.value = [userInput.value[0], target.value]\n  } else {\n    userInput.value = [null, target.value]\n  }\n}\n\nconst handleStartChange = () => {\n  const values = userInput.value as string[]\n  const value = parseUserInputToDayjs(values && values[0]) as Dayjs\n  const parsedVal = unref(parsedValue) as [Dayjs, Dayjs]\n  if (value && value.isValid()) {\n    userInput.value = [\n      formatDayjsToString(value) as string,\n      displayValue.value?.[1] || null,\n    ]\n    const newValue = [value, parsedVal && (parsedVal[1] || null)] as DayOrDays\n    if (isValidValue(newValue)) {\n      emitInput(dayOrDaysToDate(newValue))\n      userInput.value = null\n    }\n  }\n}\n\nconst handleEndChange = () => {\n  const values = unref(userInput) as string[]\n  const value = parseUserInputToDayjs(values && values[1]) as Dayjs\n  const parsedVal = unref(parsedValue) as [Dayjs, Dayjs]\n  if (value && value.isValid()) {\n    userInput.value = [\n      unref(displayValue)?.[0] || null,\n      formatDayjsToString(value) as string,\n    ]\n    const newValue = [parsedVal && parsedVal[0], value] as DayOrDays\n    if (isValidValue(newValue)) {\n      emitInput(dayOrDaysToDate(newValue))\n      userInput.value = null\n    }\n  }\n}\n\nconst focus = () => {\n  inputRef.value?.focus()\n}\n\nconst blur = () => {\n  inputRef.value?.blur()\n}\n\nprovide(PICKER_BASE_INJECTION_KEY, {\n  props,\n  emptyValues,\n})\nprovide(ROOT_COMMON_PICKER_INJECTION_KEY, commonPicker)\n\ndefineExpose({\n  /**\n   * @description focus input box.\n   */\n  focus,\n  /**\n   * @description blur input box.\n   */\n  blur,\n  /**\n   * @description opens picker\n   */\n  handleOpen,\n  /**\n   * @description closes picker\n   */\n  handleClose,\n  /**\n   * @description pick item manually\n   */\n  onPick,\n})\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}