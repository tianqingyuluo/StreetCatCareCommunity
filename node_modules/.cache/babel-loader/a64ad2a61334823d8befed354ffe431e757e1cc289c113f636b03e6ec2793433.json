{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { defineComponent, computed, ref, openBlock, createElementBlock, normalizeClass, unref, createVNode, mergeProps, createSlots, renderList, withCtx, renderSlot, normalizeProps, guardReactiveProps, createElementVNode, normalizeStyle, withModifiers, nextTick } from 'vue';\nimport { pick } from 'lodash-unified';\nimport { ElInput } from '../../input/index.mjs';\nimport { ElTooltip } from '../../tooltip/index.mjs';\nimport { mentionProps, mentionEmits, mentionDefaultProps } from './mention.mjs';\nimport { getCursorPosition, getMentionCtx } from './helper.mjs';\nimport ElMentionDropdown from './mention-dropdown.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { inputProps } from '../../input/src/input.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useFormDisabled } from '../../form/src/hooks/use-form-common-props.mjs';\nimport { useId } from '../../../hooks/use-id/index.mjs';\nimport { useFocusController } from '../../../hooks/use-focus-controller/index.mjs';\nimport { UPDATE_MODEL_EVENT, INPUT_EVENT } from '../../../constants/event.mjs';\nimport { getEventCode } from '../../../utils/dom/event.mjs';\nimport { EVENT_CODE } from '../../../constants/aria.mjs';\nimport { isFunction } from '@vue/shared';\nconst __default__ = defineComponent({\n  name: \"ElMention\",\n  inheritAttrs: false\n});\nconst _sfc_main = /* @__PURE__ */defineComponent({\n  ...__default__,\n  props: mentionProps,\n  emits: mentionEmits,\n  setup(__props, {\n    expose,\n    emit\n  }) {\n    const props = __props;\n    const passInputProps = computed(() => pick(props, Object.keys(inputProps)));\n    const ns = useNamespace(\"mention\");\n    const disabled = useFormDisabled();\n    const contentId = useId();\n    const elInputRef = ref();\n    const tooltipRef = ref();\n    const dropdownRef = ref();\n    const visible = ref(false);\n    const cursorStyle = ref();\n    const mentionCtx = ref();\n    const computedPlacement = computed(() => props.showArrow ? props.placement : `${props.placement}-start`);\n    const computedFallbackPlacements = computed(() => props.showArrow ? [\"bottom\", \"top\"] : [\"bottom-start\", \"top-start\"]);\n    const aliasProps = computed(() => ({\n      ...mentionDefaultProps,\n      ...props.props\n    }));\n    const mapOption = option => {\n      const base = {\n        label: option[aliasProps.value.label],\n        value: option[aliasProps.value.value],\n        disabled: option[aliasProps.value.disabled]\n      };\n      return {\n        ...option,\n        ...base\n      };\n    };\n    const options = computed(() => props.options.map(mapOption));\n    const filteredOptions = computed(() => {\n      const {\n        filterOption\n      } = props;\n      if (!mentionCtx.value || !filterOption) return options.value;\n      return options.value.filter(option => filterOption(mentionCtx.value.pattern, option));\n    });\n    const dropdownVisible = computed(() => {\n      return visible.value && (!!filteredOptions.value.length || props.loading);\n    });\n    const hoveringId = computed(() => {\n      var _a;\n      return `${contentId.value}-${(_a = dropdownRef.value) == null ? void 0 : _a.hoveringIndex}`;\n    });\n    const handleInputChange = value => {\n      emit(UPDATE_MODEL_EVENT, value);\n      emit(INPUT_EVENT, value);\n      syncAfterCursorMove();\n    };\n    const handleInputKeyDown = event => {\n      var _a, _b, _c, _d;\n      if ((_a = elInputRef.value) == null ? void 0 : _a.isComposing) return;\n      const code = getEventCode(event);\n      switch (code) {\n        case EVENT_CODE.left:\n        case EVENT_CODE.right:\n          syncAfterCursorMove();\n          break;\n        case EVENT_CODE.up:\n        case EVENT_CODE.down:\n          if (!visible.value) return;\n          event.preventDefault();\n          (_b = dropdownRef.value) == null ? void 0 : _b.navigateOptions(code === EVENT_CODE.up ? \"prev\" : \"next\");\n          break;\n        case EVENT_CODE.enter:\n        case EVENT_CODE.numpadEnter:\n          if (!visible.value) {\n            props.type !== \"textarea\" && syncAfterCursorMove();\n            return;\n          }\n          event.preventDefault();\n          if ((_c = dropdownRef.value) == null ? void 0 : _c.hoverOption) {\n            (_d = dropdownRef.value) == null ? void 0 : _d.selectHoverOption();\n          } else {\n            visible.value = false;\n          }\n          break;\n        case EVENT_CODE.esc:\n          if (!visible.value) return;\n          event.preventDefault();\n          visible.value = false;\n          break;\n        case EVENT_CODE.backspace:\n          if (props.whole && mentionCtx.value) {\n            const {\n              splitIndex,\n              selectionEnd,\n              pattern,\n              prefixIndex,\n              prefix\n            } = mentionCtx.value;\n            const inputEl = getInputEl();\n            if (!inputEl) return;\n            const inputValue = inputEl.value;\n            const matchOption = options.value.find(item => item.value === pattern);\n            const isWhole = isFunction(props.checkIsWhole) ? props.checkIsWhole(pattern, prefix) : matchOption;\n            if (isWhole && splitIndex !== -1 && splitIndex + 1 === selectionEnd) {\n              event.preventDefault();\n              const newValue = inputValue.slice(0, prefixIndex) + inputValue.slice(splitIndex + 1);\n              emit(UPDATE_MODEL_EVENT, newValue);\n              emit(INPUT_EVENT, newValue);\n              emit(\"whole-remove\", pattern, prefix);\n              const newSelectionEnd = prefixIndex;\n              nextTick(() => {\n                inputEl.selectionStart = newSelectionEnd;\n                inputEl.selectionEnd = newSelectionEnd;\n                syncDropdownVisible();\n              });\n            }\n          }\n      }\n    };\n    const {\n      wrapperRef\n    } = useFocusController(elInputRef, {\n      disabled,\n      afterFocus() {\n        syncAfterCursorMove();\n      },\n      beforeBlur(event) {\n        var _a;\n        return (_a = tooltipRef.value) == null ? void 0 : _a.isFocusInsideContent(event);\n      },\n      afterBlur() {\n        visible.value = false;\n      }\n    });\n    const handleInputMouseDown = () => {\n      syncAfterCursorMove();\n    };\n    const getOriginalOption = mentionOption => {\n      return props.options.find(option => {\n        return mentionOption.value === option[aliasProps.value.value];\n      });\n    };\n    const handleSelect = item => {\n      if (!mentionCtx.value) return;\n      const inputEl = getInputEl();\n      if (!inputEl) return;\n      const inputValue = inputEl.value;\n      const {\n        split\n      } = props;\n      const newEndPart = inputValue.slice(mentionCtx.value.end);\n      const alreadySeparated = newEndPart.startsWith(split);\n      const newMiddlePart = `${item.value}${alreadySeparated ? \"\" : split}`;\n      const newValue = inputValue.slice(0, mentionCtx.value.start) + newMiddlePart + newEndPart;\n      emit(UPDATE_MODEL_EVENT, newValue);\n      emit(INPUT_EVENT, newValue);\n      emit(\"select\", getOriginalOption(item), mentionCtx.value.prefix);\n      const newSelectionEnd = mentionCtx.value.start + newMiddlePart.length + (alreadySeparated ? 1 : 0);\n      nextTick(() => {\n        inputEl.selectionStart = newSelectionEnd;\n        inputEl.selectionEnd = newSelectionEnd;\n        inputEl.focus();\n        syncDropdownVisible();\n      });\n    };\n    const getInputEl = () => {\n      var _a, _b;\n      return props.type === \"textarea\" ? (_a = elInputRef.value) == null ? void 0 : _a.textarea : (_b = elInputRef.value) == null ? void 0 : _b.input;\n    };\n    const syncAfterCursorMove = () => {\n      setTimeout(() => {\n        syncCursor();\n        syncDropdownVisible();\n        nextTick(() => {\n          var _a;\n          return (_a = tooltipRef.value) == null ? void 0 : _a.updatePopper();\n        });\n      }, 0);\n    };\n    const syncCursor = () => {\n      const inputEl = getInputEl();\n      if (!inputEl) return;\n      const caretPosition = getCursorPosition(inputEl);\n      const inputRect = inputEl.getBoundingClientRect();\n      const wrapperRect = wrapperRef.value.getBoundingClientRect();\n      cursorStyle.value = {\n        position: \"absolute\",\n        width: 0,\n        height: `${caretPosition.height}px`,\n        left: `${caretPosition.left + inputRect.left - wrapperRect.left}px`,\n        top: `${caretPosition.top + inputRect.top - wrapperRect.top}px`\n      };\n    };\n    const syncDropdownVisible = () => {\n      const inputEl = getInputEl();\n      if (document.activeElement !== inputEl) {\n        visible.value = false;\n        return;\n      }\n      const {\n        prefix,\n        split\n      } = props;\n      mentionCtx.value = getMentionCtx(inputEl, prefix, split);\n      if (mentionCtx.value && mentionCtx.value.splitIndex === -1) {\n        visible.value = true;\n        emit(\"search\", mentionCtx.value.pattern, mentionCtx.value.prefix);\n        return;\n      }\n      visible.value = false;\n    };\n    expose({\n      input: elInputRef,\n      tooltip: tooltipRef,\n      dropdownVisible\n    });\n    return (_ctx, _cache) => {\n      return openBlock(), createElementBlock(\"div\", {\n        ref_key: \"wrapperRef\",\n        ref: wrapperRef,\n        class: normalizeClass(unref(ns).b())\n      }, [createVNode(unref(ElInput), mergeProps(mergeProps(unref(passInputProps), _ctx.$attrs), {\n        ref_key: \"elInputRef\",\n        ref: elInputRef,\n        \"model-value\": _ctx.modelValue,\n        disabled: unref(disabled),\n        role: unref(dropdownVisible) ? \"combobox\" : void 0,\n        \"aria-activedescendant\": unref(dropdownVisible) ? unref(hoveringId) || \"\" : void 0,\n        \"aria-controls\": unref(dropdownVisible) ? unref(contentId) : void 0,\n        \"aria-expanded\": unref(dropdownVisible) || void 0,\n        \"aria-label\": _ctx.ariaLabel,\n        \"aria-autocomplete\": unref(dropdownVisible) ? \"none\" : void 0,\n        \"aria-haspopup\": unref(dropdownVisible) ? \"listbox\" : void 0,\n        onInput: handleInputChange,\n        onKeydown: handleInputKeyDown,\n        onMousedown: handleInputMouseDown\n      }), createSlots({\n        _: 2\n      }, [renderList(_ctx.$slots, (_, name) => {\n        return {\n          name,\n          fn: withCtx(slotProps => [renderSlot(_ctx.$slots, name, normalizeProps(guardReactiveProps(slotProps)))])\n        };\n      })]), 1040, [\"model-value\", \"disabled\", \"role\", \"aria-activedescendant\", \"aria-controls\", \"aria-expanded\", \"aria-label\", \"aria-autocomplete\", \"aria-haspopup\"]), createVNode(unref(ElTooltip), {\n        ref_key: \"tooltipRef\",\n        ref: tooltipRef,\n        visible: unref(dropdownVisible),\n        \"popper-class\": [unref(ns).e(\"popper\"), _ctx.popperClass],\n        \"popper-options\": _ctx.popperOptions,\n        placement: unref(computedPlacement),\n        \"fallback-placements\": unref(computedFallbackPlacements),\n        effect: \"light\",\n        pure: \"\",\n        offset: _ctx.offset,\n        \"show-arrow\": _ctx.showArrow\n      }, {\n        default: withCtx(() => [createElementVNode(\"div\", {\n          style: normalizeStyle(cursorStyle.value)\n        }, null, 4)]),\n        content: withCtx(() => {\n          var _a;\n          return [createVNode(ElMentionDropdown, {\n            ref_key: \"dropdownRef\",\n            ref: dropdownRef,\n            options: unref(filteredOptions),\n            disabled: unref(disabled),\n            loading: _ctx.loading,\n            \"content-id\": unref(contentId),\n            \"aria-label\": _ctx.ariaLabel,\n            onSelect: handleSelect,\n            onClick: withModifiers((_a = elInputRef.value) == null ? void 0 : _a.focus, [\"stop\"])\n          }, createSlots({\n            _: 2\n          }, [renderList(_ctx.$slots, (_, name) => {\n            return {\n              name,\n              fn: withCtx(slotProps => [renderSlot(_ctx.$slots, name, normalizeProps(guardReactiveProps(slotProps)))])\n            };\n          })]), 1032, [\"options\", \"disabled\", \"loading\", \"content-id\", \"aria-label\", \"onClick\"])];\n        }),\n        _: 3\n      }, 8, [\"visible\", \"popper-class\", \"popper-options\", \"placement\", \"fallback-placements\", \"offset\", \"show-arrow\"])], 2);\n    };\n  }\n});\nvar Mention = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"mention.vue\"]]);\nexport { Mention as default };","map":{"version":3,"names":["name","inheritAttrs","passInputProps","computed","pick","props","Object","keys","inputProps","ns","useNamespace","disabled","useFormDisabled","contentId","useId","elInputRef","ref","tooltipRef","dropdownRef","visible","cursorStyle","mentionCtx","computedPlacement","showArrow","placement","computedFallbackPlacements","aliasProps","mentionDefaultProps","mapOption","option","base","label","value","options","map","filteredOptions","filterOption","filter","pattern","dropdownVisible","length","loading","hoveringId","_a","hoveringIndex","handleInputChange","emit","UPDATE_MODEL_EVENT","INPUT_EVENT","syncAfterCursorMove","handleInputKeyDown","event","_b","_c","_d","isComposing","code","getEventCode","EVENT_CODE","left","right","up","down","preventDefault","navigateOptions","enter","numpadEnter","type","hoverOption","selectHoverOption","esc","backspace","whole","splitIndex","selectionEnd","prefixIndex","prefix","inputEl","getInputEl","inputValue","matchOption","find","item","isWhole","isFunction","checkIsWhole","newValue","slice","newSelectionEnd","nextTick","selectionStart","syncDropdownVisible","wrapperRef","useFocusController","afterFocus","beforeBlur","isFocusInsideContent","afterBlur","handleInputMouseDown","getOriginalOption","mentionOption","handleSelect","split","newEndPart","end","alreadySeparated","startsWith","newMiddlePart","start","focus","textarea","input","setTimeout","syncCursor","updatePopper","caretPosition","getCursorPosition","inputRect","getBoundingClientRect","wrapperRect","position","width","height","top","document","activeElement","getMentionCtx"],"sources":["../../../../../../packages/components/mention/src/mention.vue"],"sourcesContent":["<template>\n  <div ref=\"wrapperRef\" :class=\"ns.b()\">\n    <el-input\n      v-bind=\"mergeProps(passInputProps, $attrs)\"\n      ref=\"elInputRef\"\n      :model-value=\"modelValue\"\n      :disabled=\"disabled\"\n      :role=\"dropdownVisible ? 'combobox' : undefined\"\n      :aria-activedescendant=\"dropdownVisible ? hoveringId || '' : undefined\"\n      :aria-controls=\"dropdownVisible ? contentId : undefined\"\n      :aria-expanded=\"dropdownVisible || undefined\"\n      :aria-label=\"ariaLabel\"\n      :aria-autocomplete=\"dropdownVisible ? 'none' : undefined\"\n      :aria-haspopup=\"dropdownVisible ? 'listbox' : undefined\"\n      @input=\"handleInputChange\"\n      @keydown=\"handleInputKeyDown\"\n      @mousedown=\"handleInputMouseDown\"\n    >\n      <template v-for=\"(_, name) in $slots\" #[name]=\"slotProps\">\n        <slot :name=\"name\" v-bind=\"slotProps\" />\n      </template>\n    </el-input>\n    <el-tooltip\n      ref=\"tooltipRef\"\n      :visible=\"dropdownVisible\"\n      :popper-class=\"[ns.e('popper'), popperClass]\"\n      :popper-options=\"popperOptions\"\n      :placement=\"computedPlacement\"\n      :fallback-placements=\"computedFallbackPlacements\"\n      effect=\"light\"\n      pure\n      :offset=\"offset\"\n      :show-arrow=\"showArrow\"\n    >\n      <template #default>\n        <div :style=\"cursorStyle\" />\n      </template>\n      <template #content>\n        <el-mention-dropdown\n          ref=\"dropdownRef\"\n          :options=\"filteredOptions\"\n          :disabled=\"disabled\"\n          :loading=\"loading\"\n          :content-id=\"contentId\"\n          :aria-label=\"ariaLabel\"\n          @select=\"handleSelect\"\n          @click.stop=\"elInputRef?.focus\"\n        >\n          <template v-for=\"(_, name) in $slots\" #[name]=\"slotProps\">\n            <slot :name=\"name\" v-bind=\"slotProps\" />\n          </template>\n        </el-mention-dropdown>\n      </template>\n    </el-tooltip>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, mergeProps, nextTick, ref } from 'vue'\nimport { pick } from 'lodash-unified'\nimport { useFocusController, useId, useNamespace } from '@element-plus/hooks'\nimport ElInput, { inputProps } from '@element-plus/components/input'\nimport ElTooltip from '@element-plus/components/tooltip'\nimport {\n  EVENT_CODE,\n  INPUT_EVENT,\n  UPDATE_MODEL_EVENT,\n} from '@element-plus/constants'\nimport { useFormDisabled } from '@element-plus/components/form'\nimport { getEventCode, isFunction } from '@element-plus/utils'\nimport { mentionDefaultProps, mentionEmits, mentionProps } from './mention'\nimport { getCursorPosition, getMentionCtx } from './helper'\nimport ElMentionDropdown from './mention-dropdown.vue'\n\nimport type { Placement } from '@popperjs/core'\nimport type { CSSProperties } from 'vue'\nimport type { InputInstance } from '@element-plus/components/input'\nimport type { TooltipInstance } from '@element-plus/components/tooltip'\nimport type { MentionCtx, MentionOption } from './types'\n\ndefineOptions({\n  name: 'ElMention',\n  inheritAttrs: false,\n})\n\nconst props = defineProps(mentionProps)\nconst emit = defineEmits(mentionEmits)\n\nconst passInputProps = computed(() => pick(props, Object.keys(inputProps)))\n\nconst ns = useNamespace('mention')\nconst disabled = useFormDisabled()\nconst contentId = useId()\n\nconst elInputRef = ref<InputInstance>()\nconst tooltipRef = ref<TooltipInstance>()\nconst dropdownRef = ref<InstanceType<typeof ElMentionDropdown>>()\n\nconst visible = ref(false)\nconst cursorStyle = ref<CSSProperties>()\nconst mentionCtx = ref<MentionCtx>()\n\nconst computedPlacement = computed<Placement>(() =>\n  props.showArrow ? props.placement : `${props.placement}-start`\n)\n\nconst computedFallbackPlacements = computed<Placement[]>(() =>\n  props.showArrow ? ['bottom', 'top'] : ['bottom-start', 'top-start']\n)\n\nconst aliasProps = computed(() => ({\n  ...mentionDefaultProps,\n  ...props.props,\n}))\n\nconst mapOption = (option: MentionOption) => {\n  const base = {\n    label: option[aliasProps.value.label],\n    value: option[aliasProps.value.value],\n    disabled: option[aliasProps.value.disabled],\n  }\n  return { ...option, ...base }\n}\n\nconst options = computed(() => props.options.map(mapOption))\n\nconst filteredOptions = computed(() => {\n  const { filterOption } = props\n  if (!mentionCtx.value || !filterOption) return options.value\n  return options.value.filter((option) =>\n    filterOption(mentionCtx.value!.pattern, option)\n  )\n})\n\nconst dropdownVisible = computed(() => {\n  return visible.value && (!!filteredOptions.value.length || props.loading)\n})\n\nconst hoveringId = computed(() => {\n  return `${contentId.value}-${dropdownRef.value?.hoveringIndex}`\n})\n\nconst handleInputChange = (value: string) => {\n  emit(UPDATE_MODEL_EVENT, value)\n  emit(INPUT_EVENT, value)\n  syncAfterCursorMove()\n}\n\nconst handleInputKeyDown = (event: KeyboardEvent | Event) => {\n  if (elInputRef.value?.isComposing) return\n  const code = getEventCode(event as KeyboardEvent)\n\n  switch (code) {\n    case EVENT_CODE.left:\n    case EVENT_CODE.right:\n      syncAfterCursorMove()\n      break\n    case EVENT_CODE.up:\n    case EVENT_CODE.down:\n      if (!visible.value) return\n      event.preventDefault()\n      dropdownRef.value?.navigateOptions(\n        code === EVENT_CODE.up ? 'prev' : 'next'\n      )\n      break\n    case EVENT_CODE.enter:\n    case EVENT_CODE.numpadEnter:\n      if (!visible.value) {\n        props.type !== 'textarea' && syncAfterCursorMove()\n        return\n      }\n      event.preventDefault()\n      if (dropdownRef.value?.hoverOption) {\n        dropdownRef.value?.selectHoverOption()\n      } else {\n        visible.value = false\n      }\n      break\n    case EVENT_CODE.esc:\n      if (!visible.value) return\n      event.preventDefault()\n      visible.value = false\n      break\n    case EVENT_CODE.backspace:\n      if (props.whole && mentionCtx.value) {\n        const { splitIndex, selectionEnd, pattern, prefixIndex, prefix } =\n          mentionCtx.value\n        const inputEl = getInputEl()\n        if (!inputEl) return\n        const inputValue = inputEl.value\n        const matchOption = options.value.find((item) => item.value === pattern)\n        const isWhole = isFunction(props.checkIsWhole)\n          ? props.checkIsWhole(pattern, prefix)\n          : matchOption\n        if (isWhole && splitIndex !== -1 && splitIndex + 1 === selectionEnd) {\n          event.preventDefault()\n          const newValue =\n            inputValue.slice(0, prefixIndex) + inputValue.slice(splitIndex + 1)\n          emit(UPDATE_MODEL_EVENT, newValue)\n          emit(INPUT_EVENT, newValue)\n          emit('whole-remove', pattern, prefix)\n\n          const newSelectionEnd = prefixIndex\n          nextTick(() => {\n            // input value is updated\n            inputEl.selectionStart = newSelectionEnd\n            inputEl.selectionEnd = newSelectionEnd\n            syncDropdownVisible()\n          })\n        }\n      }\n  }\n}\n\nconst { wrapperRef } = useFocusController(elInputRef, {\n  disabled,\n  afterFocus() {\n    syncAfterCursorMove()\n  },\n  beforeBlur(event) {\n    return tooltipRef.value?.isFocusInsideContent(event)\n  },\n  afterBlur() {\n    visible.value = false\n  },\n})\n\nconst handleInputMouseDown = () => {\n  syncAfterCursorMove()\n}\n\n// Ensure that the original option passed by users is returned\nconst getOriginalOption = (mentionOption: MentionOption) => {\n  return props.options.find((option: MentionOption) => {\n    return mentionOption.value === option[aliasProps.value.value]\n  })\n}\n\nconst handleSelect = (item: MentionOption) => {\n  if (!mentionCtx.value) return\n  const inputEl = getInputEl()\n  if (!inputEl) return\n  const inputValue = inputEl.value\n  const { split } = props\n\n  const newEndPart = inputValue.slice(mentionCtx.value.end)\n  const alreadySeparated = newEndPart.startsWith(split)\n  const newMiddlePart = `${item.value}${alreadySeparated ? '' : split}`\n\n  const newValue =\n    inputValue.slice(0, mentionCtx.value.start) + newMiddlePart + newEndPart\n\n  emit(UPDATE_MODEL_EVENT, newValue)\n  emit(INPUT_EVENT, newValue)\n  emit('select', getOriginalOption(item)!, mentionCtx.value.prefix)\n\n  const newSelectionEnd =\n    mentionCtx.value.start + newMiddlePart.length + (alreadySeparated ? 1 : 0)\n\n  nextTick(() => {\n    // input value is updated\n    inputEl.selectionStart = newSelectionEnd\n    inputEl.selectionEnd = newSelectionEnd\n    inputEl.focus()\n    syncDropdownVisible()\n  })\n}\n\nconst getInputEl = () =>\n  props.type === 'textarea'\n    ? elInputRef.value?.textarea\n    : elInputRef.value?.input\n\nconst syncAfterCursorMove = () => {\n  // can't use nextTick(), get cursor position will be wrong\n  setTimeout(() => {\n    syncCursor()\n    syncDropdownVisible()\n    nextTick(() => tooltipRef.value?.updatePopper())\n  }, 0)\n}\n\nconst syncCursor = () => {\n  const inputEl = getInputEl()\n  if (!inputEl) return\n\n  const caretPosition = getCursorPosition(inputEl)\n  const inputRect = inputEl.getBoundingClientRect()\n  const wrapperRect = wrapperRef.value!.getBoundingClientRect()\n\n  cursorStyle.value = {\n    position: 'absolute',\n    width: 0,\n    height: `${caretPosition.height}px`,\n    left: `${caretPosition.left + inputRect.left - wrapperRect.left}px`,\n    top: `${caretPosition.top + inputRect.top - wrapperRect.top}px`,\n  }\n}\n\nconst syncDropdownVisible = () => {\n  const inputEl = getInputEl()\n  if (document.activeElement !== inputEl) {\n    visible.value = false\n    return\n  }\n  const { prefix, split } = props\n  mentionCtx.value = getMentionCtx(inputEl, prefix, split)\n  if (mentionCtx.value && mentionCtx.value.splitIndex === -1) {\n    visible.value = true\n    emit('search', mentionCtx.value.pattern, mentionCtx.value.prefix)\n    return\n  }\n  visible.value = false\n}\n\ndefineExpose({\n  input: elInputRef,\n  tooltip: tooltipRef,\n  dropdownVisible,\n})\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}