{"ast":null,"code":"import { defineComponent, getCurrentInstance, ref, computed, provide, toRef, unref, resolveComponent, openBlock, createElementBlock, normalizeClass, createVNode, createSlots, withCtx, renderSlot, createBlock, mergeProps, createCommentVNode } from 'vue';\nimport { ElButton } from '../../button/index.mjs';\nimport { ElTooltip } from '../../tooltip/index.mjs';\nimport { ElScrollbar } from '../../scrollbar/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport ElRovingFocusGroup from '../../roving-focus-group/src/roving-focus-group2.mjs';\nimport { ArrowDown } from '@element-plus/icons-vue';\nimport { ElCollection, dropdownProps } from './dropdown.mjs';\nimport { DROPDOWN_INJECTION_KEY, DROPDOWN_INSTANCE_INJECTION_KEY } from './tokens.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { OnlyChild } from '../../slot/src/only-child.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index.mjs';\nimport { addUnit } from '../../../utils/dom/style.mjs';\nimport { castArray } from 'lodash-unified';\nimport { useId } from '../../../hooks/use-id/index.mjs';\nimport { useFormSize } from '../../form/src/hooks/use-form-common-props.mjs';\nconst {\n  ButtonGroup: ElButtonGroup\n} = ElButton;\nconst _sfc_main = defineComponent({\n  name: \"ElDropdown\",\n  components: {\n    ElButton,\n    ElButtonGroup,\n    ElScrollbar,\n    ElDropdownCollection: ElCollection,\n    ElTooltip,\n    ElRovingFocusGroup,\n    ElOnlyChild: OnlyChild,\n    ElIcon,\n    ArrowDown\n  },\n  props: dropdownProps,\n  emits: [\"visible-change\", \"click\", \"command\"],\n  setup(props, {\n    emit\n  }) {\n    const _instance = getCurrentInstance();\n    const ns = useNamespace(\"dropdown\");\n    const {\n      t\n    } = useLocale();\n    const triggeringElementRef = ref();\n    const referenceElementRef = ref();\n    const popperRef = ref();\n    const contentRef = ref();\n    const scrollbar = ref(null);\n    const currentTabId = ref(null);\n    const isUsingKeyboard = ref(false);\n    const wrapStyle = computed(() => ({\n      maxHeight: addUnit(props.maxHeight)\n    }));\n    const dropdownTriggerKls = computed(() => [ns.m(dropdownSize.value)]);\n    const trigger = computed(() => castArray(props.trigger));\n    const defaultTriggerId = useId().value;\n    const triggerId = computed(() => props.id || defaultTriggerId);\n    function handleClick() {\n      var _a;\n      (_a = popperRef.value) == null ? void 0 : _a.onClose(void 0, 0);\n    }\n    function handleClose() {\n      var _a;\n      (_a = popperRef.value) == null ? void 0 : _a.onClose();\n    }\n    function handleOpen() {\n      var _a;\n      (_a = popperRef.value) == null ? void 0 : _a.onOpen();\n    }\n    const dropdownSize = useFormSize();\n    function commandHandler(...args) {\n      emit(\"command\", ...args);\n    }\n    function onItemEnter() {}\n    function onItemLeave() {\n      const contentEl = unref(contentRef);\n      trigger.value.includes(\"hover\") && (contentEl == null ? void 0 : contentEl.focus({\n        preventScroll: true\n      }));\n      currentTabId.value = null;\n    }\n    function handleCurrentTabIdChange(id) {\n      currentTabId.value = id;\n    }\n    function handleEntryFocus(e) {\n      if (!isUsingKeyboard.value) {\n        e.preventDefault();\n        e.stopImmediatePropagation();\n      }\n    }\n    function handleBeforeShowTooltip() {\n      emit(\"visible-change\", true);\n    }\n    function handleShowTooltip(event) {\n      var _a;\n      if ((event == null ? void 0 : event.type) === \"keydown\") {\n        (_a = contentRef.value) == null ? void 0 : _a.focus();\n      }\n    }\n    function handleBeforeHideTooltip() {\n      emit(\"visible-change\", false);\n    }\n    provide(DROPDOWN_INJECTION_KEY, {\n      contentRef,\n      role: computed(() => props.role),\n      triggerId,\n      isUsingKeyboard,\n      onItemEnter,\n      onItemLeave\n    });\n    provide(DROPDOWN_INSTANCE_INJECTION_KEY, {\n      instance: _instance,\n      dropdownSize,\n      handleClick,\n      commandHandler,\n      trigger: toRef(props, \"trigger\"),\n      hideOnClick: toRef(props, \"hideOnClick\")\n    });\n    const onFocusAfterTrapped = e => {\n      var _a, _b;\n      e.preventDefault();\n      (_b = (_a = contentRef.value) == null ? void 0 : _a.focus) == null ? void 0 : _b.call(_a, {\n        preventScroll: true\n      });\n    };\n    const handlerMainButtonClick = event => {\n      emit(\"click\", event);\n    };\n    return {\n      t,\n      ns,\n      scrollbar,\n      wrapStyle,\n      dropdownTriggerKls,\n      dropdownSize,\n      triggerId,\n      currentTabId,\n      handleCurrentTabIdChange,\n      handlerMainButtonClick,\n      handleEntryFocus,\n      handleClose,\n      handleOpen,\n      handleBeforeShowTooltip,\n      handleShowTooltip,\n      handleBeforeHideTooltip,\n      onFocusAfterTrapped,\n      popperRef,\n      contentRef,\n      triggeringElementRef,\n      referenceElementRef\n    };\n  }\n});\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _a, _b;\n  const _component_el_dropdown_collection = resolveComponent(\"el-dropdown-collection\");\n  const _component_el_roving_focus_group = resolveComponent(\"el-roving-focus-group\");\n  const _component_el_scrollbar = resolveComponent(\"el-scrollbar\");\n  const _component_el_only_child = resolveComponent(\"el-only-child\");\n  const _component_el_tooltip = resolveComponent(\"el-tooltip\");\n  const _component_el_button = resolveComponent(\"el-button\");\n  const _component_arrow_down = resolveComponent(\"arrow-down\");\n  const _component_el_icon = resolveComponent(\"el-icon\");\n  const _component_el_button_group = resolveComponent(\"el-button-group\");\n  return openBlock(), createElementBlock(\"div\", {\n    class: normalizeClass([_ctx.ns.b(), _ctx.ns.is(\"disabled\", _ctx.disabled)])\n  }, [createVNode(_component_el_tooltip, {\n    ref: \"popperRef\",\n    role: _ctx.role,\n    effect: _ctx.effect,\n    \"fallback-placements\": [\"bottom\", \"top\"],\n    \"popper-options\": _ctx.popperOptions,\n    \"gpu-acceleration\": false,\n    \"manual-mode\": true,\n    placement: _ctx.placement,\n    \"popper-class\": [_ctx.ns.e(\"popper\"), _ctx.popperClass],\n    \"reference-element\": (_a = _ctx.referenceElementRef) == null ? void 0 : _a.$el,\n    trigger: _ctx.trigger,\n    \"trigger-keys\": _ctx.triggerKeys,\n    \"trigger-target-el\": _ctx.contentRef,\n    \"show-arrow\": _ctx.showArrow,\n    \"show-after\": _ctx.trigger === \"hover\" ? _ctx.showTimeout : 0,\n    \"hide-after\": _ctx.trigger === \"hover\" ? _ctx.hideTimeout : 0,\n    \"stop-popper-mouse-event\": false,\n    \"virtual-ref\": (_b = _ctx.virtualRef) != null ? _b : _ctx.triggeringElementRef,\n    \"virtual-triggering\": _ctx.virtualTriggering || _ctx.splitButton,\n    disabled: _ctx.disabled,\n    transition: `${_ctx.ns.namespace.value}-zoom-in-top`,\n    teleported: _ctx.teleported,\n    pure: \"\",\n    \"focus-on-target\": \"\",\n    persistent: _ctx.persistent,\n    onBeforeShow: _ctx.handleBeforeShowTooltip,\n    onShow: _ctx.handleShowTooltip,\n    onBeforeHide: _ctx.handleBeforeHideTooltip\n  }, createSlots({\n    content: withCtx(() => [createVNode(_component_el_scrollbar, {\n      ref: \"scrollbar\",\n      \"wrap-style\": _ctx.wrapStyle,\n      tag: \"div\",\n      \"view-class\": _ctx.ns.e(\"list\")\n    }, {\n      default: withCtx(() => [createVNode(_component_el_roving_focus_group, {\n        loop: _ctx.loop,\n        \"current-tab-id\": _ctx.currentTabId,\n        orientation: \"horizontal\",\n        onCurrentTabIdChange: _ctx.handleCurrentTabIdChange,\n        onEntryFocus: _ctx.handleEntryFocus\n      }, {\n        default: withCtx(() => [createVNode(_component_el_dropdown_collection, null, {\n          default: withCtx(() => [renderSlot(_ctx.$slots, \"dropdown\")]),\n          _: 3\n        })]),\n        _: 3\n      }, 8, [\"loop\", \"current-tab-id\", \"onCurrentTabIdChange\", \"onEntryFocus\"])]),\n      _: 3\n    }, 8, [\"wrap-style\", \"view-class\"])]),\n    _: 2\n  }, [!_ctx.splitButton ? {\n    name: \"default\",\n    fn: withCtx(() => [createVNode(_component_el_only_child, {\n      id: _ctx.triggerId,\n      ref: \"triggeringElementRef\",\n      role: \"button\",\n      tabindex: _ctx.tabindex\n    }, {\n      default: withCtx(() => [renderSlot(_ctx.$slots, \"default\")]),\n      _: 3\n    }, 8, [\"id\", \"tabindex\"])])\n  } : void 0]), 1032, [\"role\", \"effect\", \"popper-options\", \"placement\", \"popper-class\", \"reference-element\", \"trigger\", \"trigger-keys\", \"trigger-target-el\", \"show-arrow\", \"show-after\", \"hide-after\", \"virtual-ref\", \"virtual-triggering\", \"disabled\", \"transition\", \"teleported\", \"persistent\", \"onBeforeShow\", \"onShow\", \"onBeforeHide\"]), _ctx.splitButton ? (openBlock(), createBlock(_component_el_button_group, {\n    key: 0\n  }, {\n    default: withCtx(() => [createVNode(_component_el_button, mergeProps({\n      ref: \"referenceElementRef\"\n    }, _ctx.buttonProps, {\n      size: _ctx.dropdownSize,\n      type: _ctx.type,\n      disabled: _ctx.disabled,\n      tabindex: _ctx.tabindex,\n      onClick: _ctx.handlerMainButtonClick\n    }), {\n      default: withCtx(() => [renderSlot(_ctx.$slots, \"default\")]),\n      _: 3\n    }, 16, [\"size\", \"type\", \"disabled\", \"tabindex\", \"onClick\"]), createVNode(_component_el_button, mergeProps({\n      id: _ctx.triggerId,\n      ref: \"triggeringElementRef\"\n    }, _ctx.buttonProps, {\n      role: \"button\",\n      size: _ctx.dropdownSize,\n      type: _ctx.type,\n      class: _ctx.ns.e(\"caret-button\"),\n      disabled: _ctx.disabled,\n      tabindex: _ctx.tabindex,\n      \"aria-label\": _ctx.t(\"el.dropdown.toggleDropdown\")\n    }), {\n      default: withCtx(() => [createVNode(_component_el_icon, {\n        class: normalizeClass(_ctx.ns.e(\"icon\"))\n      }, {\n        default: withCtx(() => [createVNode(_component_arrow_down)]),\n        _: 1\n      }, 8, [\"class\"])]),\n      _: 1\n    }, 16, [\"id\", \"size\", \"type\", \"class\", \"disabled\", \"tabindex\", \"aria-label\"])]),\n    _: 3\n  })) : createCommentVNode(\"v-if\", true)], 2);\n}\nvar Dropdown = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"dropdown.vue\"]]);\nexport { Dropdown as default };","map":{"version":3,"names":["ButtonGroup","ElButtonGroup","ElButton","_sfc_main","defineComponent","name","components","ElScrollbar","ElDropdownCollection","ElCollection","ElTooltip","ElRovingFocusGroup","ElOnlyChild","OnlyChild","ElIcon","ArrowDown","props","dropdownProps","emits","setup","emit","_instance","getCurrentInstance","ns","useNamespace","t","useLocale","triggeringElementRef","ref","referenceElementRef","popperRef","contentRef","scrollbar","currentTabId","isUsingKeyboard","wrapStyle","computed","maxHeight","addUnit","dropdownTriggerKls","m","dropdownSize","value","trigger","castArray","defaultTriggerId","useId","triggerId","id","handleClick","_a","onClose","handleClose","handleOpen","onOpen","useFormSize","commandHandler","args","onItemEnter","onItemLeave","contentEl","unref","includes","focus","preventScroll","handleCurrentTabIdChange","handleEntryFocus","e","preventDefault","stopImmediatePropagation","handleBeforeShowTooltip","handleShowTooltip","event","type","handleBeforeHideTooltip","provide","DROPDOWN_INJECTION_KEY","role","DROPDOWN_INSTANCE_INJECTION_KEY","instance","toRef","hideOnClick","onFocusAfterTrapped","_b","call","handlerMainButtonClick","_component_el_only_child","resolveComponent","_component_el_tooltip","_component_el_button","_component_arrow_down","_component_el_icon","openBlock","createElementBlock","class","normalizeClass","_ctx","b","is","disabled","createVNode","effect","popperOptions","placement","popperClass","$el","triggerKeys","showArrow","showTimeout","hideTimeout","virtualRef","virtualTriggering","splitButton","transition","namespace","teleported","pure","persistent","onBeforeShow","onShow","onBeforeHide","createSlots","content","withCtx","_component_el_scrollbar","default","_component_el_roving_focus_group","loop","orientation","onEntryFocus","_component_el_dropdown_collection","fn","tabindex","_","mergeProps","buttonProps","size","onClick","renderSlot","$slots"],"sources":["../../../../../../packages/components/dropdown/src/dropdown.vue"],"sourcesContent":["<template>\n  <div :class=\"[ns.b(), ns.is('disabled', disabled)]\">\n    <el-tooltip\n      ref=\"popperRef\"\n      :role=\"role\"\n      :effect=\"effect\"\n      :fallback-placements=\"['bottom', 'top']\"\n      :popper-options=\"popperOptions\"\n      :gpu-acceleration=\"false\"\n      :manual-mode=\"true\"\n      :placement=\"placement\"\n      :popper-class=\"[ns.e('popper'), popperClass]\"\n      :reference-element=\"referenceElementRef?.$el\"\n      :trigger=\"trigger\"\n      :trigger-keys=\"triggerKeys\"\n      :trigger-target-el=\"contentRef\"\n      :show-arrow=\"showArrow\"\n      :show-after=\"trigger === 'hover' ? showTimeout : 0\"\n      :hide-after=\"trigger === 'hover' ? hideTimeout : 0\"\n      :stop-popper-mouse-event=\"false\"\n      :virtual-ref=\"virtualRef ?? triggeringElementRef\"\n      :virtual-triggering=\"virtualTriggering || splitButton\"\n      :disabled=\"disabled\"\n      :transition=\"`${ns.namespace.value}-zoom-in-top`\"\n      :teleported=\"teleported\"\n      pure\n      focus-on-target\n      :persistent=\"persistent\"\n      @before-show=\"handleBeforeShowTooltip\"\n      @show=\"handleShowTooltip\"\n      @before-hide=\"handleBeforeHideTooltip\"\n    >\n      <template #content>\n        <el-scrollbar\n          ref=\"scrollbar\"\n          :wrap-style=\"wrapStyle\"\n          tag=\"div\"\n          :view-class=\"ns.e('list')\"\n        >\n          <el-roving-focus-group\n            :loop=\"loop\"\n            :current-tab-id=\"currentTabId\"\n            orientation=\"horizontal\"\n            @current-tab-id-change=\"handleCurrentTabIdChange\"\n            @entry-focus=\"handleEntryFocus\"\n          >\n            <el-dropdown-collection>\n              <slot name=\"dropdown\" />\n            </el-dropdown-collection>\n          </el-roving-focus-group>\n        </el-scrollbar>\n      </template>\n      <template v-if=\"!splitButton\" #default>\n        <el-only-child\n          :id=\"triggerId\"\n          ref=\"triggeringElementRef\"\n          role=\"button\"\n          :tabindex=\"tabindex\"\n        >\n          <slot name=\"default\" />\n        </el-only-child>\n      </template>\n    </el-tooltip>\n    <template v-if=\"splitButton\">\n      <el-button-group>\n        <el-button\n          ref=\"referenceElementRef\"\n          v-bind=\"buttonProps\"\n          :size=\"dropdownSize\"\n          :type=\"type\"\n          :disabled=\"disabled\"\n          :tabindex=\"tabindex\"\n          @click=\"handlerMainButtonClick\"\n        >\n          <slot name=\"default\" />\n        </el-button>\n        <el-button\n          :id=\"triggerId\"\n          ref=\"triggeringElementRef\"\n          v-bind=\"buttonProps\"\n          role=\"button\"\n          :size=\"dropdownSize\"\n          :type=\"type\"\n          :class=\"ns.e('caret-button')\"\n          :disabled=\"disabled\"\n          :tabindex=\"tabindex\"\n          :aria-label=\"t('el.dropdown.toggleDropdown')\"\n        >\n          <el-icon :class=\"ns.e('icon')\"><arrow-down /></el-icon>\n        </el-button>\n      </el-button-group>\n    </template>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  getCurrentInstance,\n  provide,\n  ref,\n  toRef,\n  unref,\n} from 'vue'\nimport ElButton from '@element-plus/components/button'\nimport ElTooltip from '@element-plus/components/tooltip'\nimport ElScrollbar from '@element-plus/components/scrollbar'\nimport ElIcon from '@element-plus/components/icon'\nimport ElRovingFocusGroup from '@element-plus/components/roving-focus-group'\nimport { ElOnlyChild } from '@element-plus/components/slot'\nimport { useFormSize } from '@element-plus/components/form'\nimport { addUnit, ensureArray } from '@element-plus/utils'\nimport { ArrowDown } from '@element-plus/icons-vue'\nimport { useId, useLocale, useNamespace } from '@element-plus/hooks'\nimport { ElCollection as ElDropdownCollection, dropdownProps } from './dropdown'\nimport {\n  DROPDOWN_INJECTION_KEY,\n  DROPDOWN_INSTANCE_INJECTION_KEY,\n} from './tokens'\n\nimport type { TooltipInstance } from '@element-plus/components/tooltip'\nimport type { CSSProperties } from 'vue'\n\nconst { ButtonGroup: ElButtonGroup } = ElButton\n\nexport default defineComponent({\n  name: 'ElDropdown',\n  components: {\n    ElButton,\n    ElButtonGroup,\n    ElScrollbar,\n    ElDropdownCollection,\n    ElTooltip,\n    ElRovingFocusGroup,\n    ElOnlyChild,\n    ElIcon,\n    ArrowDown,\n  },\n  props: dropdownProps,\n  emits: ['visible-change', 'click', 'command'],\n  setup(props, { emit }) {\n    const _instance = getCurrentInstance()\n    const ns = useNamespace('dropdown')\n    const { t } = useLocale()\n\n    const triggeringElementRef = ref()\n    const referenceElementRef = ref()\n    const popperRef = ref<TooltipInstance>()\n    const contentRef = ref<HTMLElement>()\n    const scrollbar = ref(null)\n    const currentTabId = ref<string | null>(null)\n    const isUsingKeyboard = ref(false)\n\n    const wrapStyle = computed<CSSProperties>(() => ({\n      maxHeight: addUnit(props.maxHeight),\n    }))\n    const dropdownTriggerKls = computed(() => [ns.m(dropdownSize.value)])\n    const trigger = computed(() => ensureArray(props.trigger))\n\n    const defaultTriggerId = useId().value\n    const triggerId = computed<string>(() => props.id || defaultTriggerId)\n\n    function handleClick() {\n      popperRef.value?.onClose(undefined, 0)\n    }\n\n    function handleClose() {\n      popperRef.value?.onClose()\n    }\n\n    function handleOpen() {\n      popperRef.value?.onOpen()\n    }\n\n    const dropdownSize = useFormSize()\n\n    function commandHandler(...args: any[]) {\n      emit('command', ...args)\n    }\n\n    function onItemEnter() {\n      // NOOP for now\n    }\n\n    function onItemLeave() {\n      const contentEl = unref(contentRef)\n\n      trigger.value.includes('hover') &&\n        contentEl?.focus({\n          preventScroll: true,\n        })\n      currentTabId.value = null\n    }\n\n    function handleCurrentTabIdChange(id: string) {\n      currentTabId.value = id\n    }\n\n    function handleEntryFocus(e: Event) {\n      if (!isUsingKeyboard.value) {\n        e.preventDefault()\n        e.stopImmediatePropagation()\n      }\n    }\n\n    function handleBeforeShowTooltip() {\n      emit('visible-change', true)\n    }\n\n    function handleShowTooltip(event?: Event) {\n      if (event?.type === 'keydown') {\n        contentRef.value?.focus()\n      }\n    }\n\n    function handleBeforeHideTooltip() {\n      emit('visible-change', false)\n    }\n\n    provide(DROPDOWN_INJECTION_KEY, {\n      contentRef,\n      role: computed(() => props.role),\n      triggerId,\n      isUsingKeyboard,\n      onItemEnter,\n      onItemLeave,\n    })\n\n    provide(DROPDOWN_INSTANCE_INJECTION_KEY, {\n      instance: _instance,\n      dropdownSize,\n      handleClick,\n      commandHandler,\n      trigger: toRef(props, 'trigger'),\n      hideOnClick: toRef(props, 'hideOnClick'),\n    })\n\n    const onFocusAfterTrapped = (e: Event) => {\n      e.preventDefault()\n      contentRef.value?.focus?.({\n        preventScroll: true,\n      })\n    }\n\n    const handlerMainButtonClick = (event: MouseEvent) => {\n      emit('click', event)\n    }\n\n    return {\n      t,\n      ns,\n      scrollbar,\n      wrapStyle,\n      dropdownTriggerKls,\n      dropdownSize,\n      triggerId,\n      currentTabId,\n      handleCurrentTabIdChange,\n      handlerMainButtonClick,\n      handleEntryFocus,\n      handleClose,\n      handleOpen,\n      handleBeforeShowTooltip,\n      handleShowTooltip,\n      handleBeforeHideTooltip,\n      onFocusAfterTrapped,\n      popperRef,\n      contentRef,\n      triggeringElementRef,\n      referenceElementRef,\n    }\n  },\n})\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}