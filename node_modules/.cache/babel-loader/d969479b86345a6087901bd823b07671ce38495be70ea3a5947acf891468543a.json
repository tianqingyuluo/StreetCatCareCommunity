{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, reactive } from 'vue';\nimport { useRouter } from 'vue-router';\nimport axios from 'axios';\nimport { ElMessage } from 'element-plus';\nexport default {\n  __name: 'LoginPage',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const loginFormRef = ref(null);\n    const loginForm = reactive({\n      username: '',\n      password: ''\n    });\n    const loginRules = reactive({\n      username: [{\n        required: true,\n        message: '请输入用户名',\n        trigger: 'blur'\n      }],\n      password: [{\n        required: true,\n        message: '请输入密码',\n        trigger: 'blur'\n      }]\n    });\n    const handleLogin = () => {\n      loginFormRef.value.validate(async valid => {\n        if (valid) {\n          try {\n            const response = await axios.post('/api/auth/login-web', loginForm);\n            if (response.data.code === 200) {\n              ElMessage.success('登录成功');\n              // 假设后端返回token，并存储\n              localStorage.setItem('token', response.data.data.token);\n              router.push('/home'); // 登录成功后跳转到首页\n            } else {\n              ElMessage.error(response.data.message || '登录失败');\n            }\n          } catch (error) {\n            console.error('登录请求失败:', error);\n            ElMessage.error('登录请求失败，请稍后再试');\n          }\n        } else {\n          ElMessage.warning('请填写完整的登录信息');\n          return false;\n        }\n      });\n    };\n    const __returned__ = {\n      router,\n      loginFormRef,\n      loginForm,\n      loginRules,\n      handleLogin,\n      ref,\n      reactive,\n      get useRouter() {\n        return useRouter;\n      },\n      get axios() {\n        return axios;\n      },\n      get ElMessage() {\n        return ElMessage;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","useRouter","axios","ElMessage","router","loginFormRef","loginForm","username","password","loginRules","required","message","trigger","handleLogin","value","validate","valid","response","post","data","code","success","localStorage","setItem","token","push","error","console","warning"],"sources":["D:/实训+课程/软件开发实训2/VueProject/vue-project/src/views/LoginPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <el-card class=\"login-card\">\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <span>用户登录</span>\r\n        </div>\r\n      </template>\r\n      <el-form :model=\"loginForm\" :rules=\"loginRules\" ref=\"loginFormRef\" label-width=\"0px\" class=\"login-form\">\r\n        <el-form-item prop=\"username\">\r\n          <el-input v-model=\"loginForm.username\" placeholder=\"请输入用户名\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"password\">\r\n          <el-input type=\"password\" v-model=\"loginForm.password\" placeholder=\"请输入密码\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"handleLogin\" style=\"width: 100%;\">登录</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport axios from 'axios';\r\nimport { ElMessage } from 'element-plus';\r\n\r\nconst router = useRouter();\r\n\r\nconst loginFormRef = ref(null);\r\nconst loginForm = reactive({\r\n  username: '',\r\n  password: ''\r\n});\r\n\r\nconst loginRules = reactive({\r\n  username: [\r\n    { required: true, message: '请输入用户名', trigger: 'blur' }\r\n  ],\r\n  password: [\r\n    { required: true, message: '请输入密码', trigger: 'blur' }\r\n  ]\r\n});\r\n\r\nconst handleLogin = () => {\r\n  loginFormRef.value.validate(async (valid) => {\r\n    if (valid) {\r\n      try {\r\n        const response = await axios.post('/api/auth/login-web', loginForm);\r\n        if (response.data.code === 200) {\r\n          ElMessage.success('登录成功');\r\n          // 假设后端返回token，并存储\r\n          localStorage.setItem('token', response.data.data.token);\r\n          router.push('/home'); // 登录成功后跳转到首页\r\n        } else {\r\n          ElMessage.error(response.data.message || '登录失败');\r\n        }\r\n      } catch (error) {\r\n        console.error('登录请求失败:', error);\r\n        ElMessage.error('登录请求失败，请稍后再试');\r\n      }\r\n    } else {\r\n      ElMessage.warning('请填写完整的登录信息');\r\n      return false;\r\n    }\r\n  });\r\n};\r\n</script>\r\n\r\n<!-- 第一步：添加全局样式（清除 body/html 默认边距，关键！） -->\r\n<style>\r\n/* 全局样式，不加 scoped，作用于整个页面 */\r\nhtml, body {\r\n  margin: 0; /* 清除默认边距，避免内容被挤出视口 */\r\n  padding: 0; /* 清除默认内边距 */\r\n  height: 100%; /* 让 html/body 占满屏幕高度，确保子容器高度生效 */\r\n  overflow: hidden; /* 强制隐藏页面滚动条，彻底禁止上下拉动 */\r\n}\r\n</style>\r\n\r\n<style scoped>\r\n.login-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh; /* 占满当前视口高度（100% Viewport Height） */\r\n  /* 去掉 overflow: hidden; 因为父级已控制滚动，这里无需重复 */\r\n  background-color: #f0f2f5;\r\n}\r\n\r\n.login-card {\r\n  width: 400px;\r\n  padding: 20px;\r\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\r\n  /* 可选：添加最小宽度，防止小屏幕下卡片变形 */\r\n  min-width: 300px;\r\n}\r\n\r\n.card-header {\r\n  text-align: center;\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n}\r\n</style>"],"mappings":";AAwBA,SAASA,GAAG,EAAEC,QAAQ,QAAQ,KAAK;AACnC,SAASC,SAAS,QAAQ,YAAY;AACtC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,cAAc;;;;;;;IAExC,MAAMC,MAAM,GAAGH,SAAS,CAAC,CAAC;IAE1B,MAAMI,YAAY,GAAGN,GAAG,CAAC,IAAI,CAAC;IAC9B,MAAMO,SAAS,GAAGN,QAAQ,CAAC;MACzBO,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;IACZ,CAAC,CAAC;IAEF,MAAMC,UAAU,GAAGT,QAAQ,CAAC;MAC1BO,QAAQ,EAAE,CACR;QAAEG,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,QAAQ;QAAEC,OAAO,EAAE;MAAO,CAAC,CACvD;MACDJ,QAAQ,EAAE,CACR;QAAEE,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,OAAO;QAAEC,OAAO,EAAE;MAAO,CAAC;IAEzD,CAAC,CAAC;IAEF,MAAMC,WAAW,GAAGA,CAAA,KAAM;MACxBR,YAAY,CAACS,KAAK,CAACC,QAAQ,CAAC,MAAOC,KAAK,IAAK;QAC3C,IAAIA,KAAK,EAAE;UACT,IAAI;YACF,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAAC,qBAAqB,EAAEZ,SAAS,CAAC;YACnE,IAAIW,QAAQ,CAACE,IAAI,CAACC,IAAI,KAAK,GAAG,EAAE;cAC9BjB,SAAS,CAACkB,OAAO,CAAC,MAAM,CAAC;cACzB;cACAC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEN,QAAQ,CAACE,IAAI,CAACA,IAAI,CAACK,KAAK,CAAC;cACvDpB,MAAM,CAACqB,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YACxB,CAAC,MAAM;cACLtB,SAAS,CAACuB,KAAK,CAACT,QAAQ,CAACE,IAAI,CAACR,OAAO,IAAI,MAAM,CAAC;YAClD;UACF,CAAC,CAAC,OAAOe,KAAK,EAAE;YACdC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;YAC/BvB,SAAS,CAACuB,KAAK,CAAC,cAAc,CAAC;UACjC;QACF,CAAC,MAAM;UACLvB,SAAS,CAACyB,OAAO,CAAC,YAAY,CAAC;UAC/B,OAAO,KAAK;QACd;MACF,CAAC,CAAC;IACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}