{"ast":null,"code":"import { isAndroid } from '../browser.mjs';\nimport { EVENT_CODE } from '../../constants/aria.mjs';\nconst composeEventHandlers = (theirsHandler, oursHandler, {\n  checkForDefaultPrevented = true\n} = {}) => {\n  const handleEvent = event => {\n    const shouldPrevent = theirsHandler == null ? void 0 : theirsHandler(event);\n    if (checkForDefaultPrevented === false || !shouldPrevent) {\n      return oursHandler == null ? void 0 : oursHandler(event);\n    }\n  };\n  return handleEvent;\n};\nconst whenMouse = handler => {\n  return e => e.pointerType === \"mouse\" ? handler(e) : void 0;\n};\nconst getEventCode = event => {\n  if (event.code && event.code !== \"Unidentified\") return event.code;\n  const key = getEventKey(event);\n  if (key) {\n    if (Object.values(EVENT_CODE).includes(key)) return key;\n    switch (key) {\n      case \" \":\n        return EVENT_CODE.space;\n      default:\n        return \"\";\n    }\n  }\n  return \"\";\n};\nconst getEventKey = event => {\n  let key = event.key && event.key !== \"Unidentified\" ? event.key : \"\";\n  if (!key && event.type === \"keyup\" && isAndroid()) {\n    const target = event.target;\n    key = target.value.charAt(target.selectionStart - 1);\n  }\n  return key;\n};\nexport { composeEventHandlers, getEventCode, getEventKey, whenMouse };","map":{"version":3,"names":["composeEventHandlers","theirsHandler","oursHandler","checkForDefaultPrevented","handleEvent","event","shouldPrevent","whenMouse","handler","e","pointerType","getEventCode","code","key","getEventKey","Object","values","EVENT_CODE","includes","space","type","isAndroid","target","value","charAt","selectionStart"],"sources":["../../../../../packages/utils/dom/event.ts"],"sourcesContent":["import { EVENT_CODE } from '@element-plus/constants'\nimport { isAndroid } from '../browser'\n\nexport const composeEventHandlers = <E>(\n  theirsHandler?: (event: E) => boolean | void,\n  oursHandler?: (event: E) => void,\n  { checkForDefaultPrevented = true } = {}\n) => {\n  const handleEvent = (event: E) => {\n    const shouldPrevent = theirsHandler?.(event)\n\n    if (checkForDefaultPrevented === false || !shouldPrevent) {\n      return oursHandler?.(event)\n    }\n  }\n  return handleEvent\n}\n\ntype WhenMouseHandler = (e: PointerEvent) => any\nexport const whenMouse = (handler: WhenMouseHandler): WhenMouseHandler => {\n  return (e: PointerEvent) =>\n    e.pointerType === 'mouse' ? handler(e) : undefined\n}\n\nexport const getEventCode = (event: KeyboardEvent): string => {\n  if (event.code && event.code !== 'Unidentified') return event.code\n  // On android, event.code is always '' (see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code#browser_compatibility)\n  const key = getEventKey(event)\n\n  if (key) {\n    if (Object.values(EVENT_CODE).includes(key)) return key\n\n    switch (key) {\n      case ' ':\n        return EVENT_CODE.space\n      default:\n        return ''\n    }\n  }\n\n  return ''\n}\n\nexport const getEventKey = (event: KeyboardEvent): string => {\n  let key = event.key && event.key !== 'Unidentified' ? event.key : ''\n\n  // On Android, event.key and event.code may not be useful when entering characters or space\n  // So here we directly get the last character of the input\n  // **only takes effect in the keyup event**\n  if (!key && event.type === 'keyup' && isAndroid()) {\n    const target = event.target as HTMLInputElement\n    key = target.value.charAt(target.selectionStart! - 1)\n  }\n\n  return key\n}\n"],"mappings":";;AAEY,MAACA,oBAAoB,GAAGA,CAACC,aAAa,EAAEC,WAAW,EAAE;EAAEC,wBAAwB,GAAG;AAAI,CAAE,GAAG,EAAE,KAAK;EAC5G,MAAMC,WAAW,GAAIC,KAAK,IAAK;IAC7B,MAAMC,aAAa,GAAGL,aAAa,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,aAAa,CAACI,KAAK,CAAC;IAC3E,IAAIF,wBAAwB,KAAK,KAAK,IAAI,CAACG,aAAa,EAAE;MACxD,OAAOJ,WAAW,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,WAAW,CAACG,KAAK,CAAC;IAC9D;EACA,CAAG;EACD,OAAOD,WAAW;AACpB;AACY,MAACG,SAAS,GAAIC,OAAO,IAAK;EACpC,OAAQC,CAAC,IAAKA,CAAC,CAACC,WAAW,KAAK,OAAO,GAAGF,OAAO,CAACC,CAAC,CAAC,GAAG,KAAK,CAAC;AAC/D;AACY,MAACE,YAAY,GAAIN,KAAK,IAAK;EACrC,IAAIA,KAAK,CAACO,IAAI,IAAIP,KAAK,CAACO,IAAI,KAAK,cAAc,EAC7C,OAAOP,KAAK,CAACO,IAAI;EACnB,MAAMC,GAAG,GAAGC,WAAW,CAACT,KAAK,CAAC;EAC9B,IAAIQ,GAAG,EAAE;IACP,IAAIE,MAAM,CAACC,MAAM,CAACC,UAAU,CAAC,CAACC,QAAQ,CAACL,GAAG,CAAC,EACzC,OAAOA,GAAG;IACZ,QAAQA,GAAG;MACT,KAAK,GAAG;QACN,OAAOI,UAAU,CAACE,KAAK;MACzB;QACE,OAAO,EAAE;IACjB;EACA;EACE,OAAO,EAAE;AACX;AACY,MAACL,WAAW,GAAIT,KAAK,IAAK;EACpC,IAAIQ,GAAG,GAAGR,KAAK,CAACQ,GAAG,IAAIR,KAAK,CAACQ,GAAG,KAAK,cAAc,GAAGR,KAAK,CAACQ,GAAG,GAAG,EAAE;EACpE,IAAI,CAACA,GAAG,IAAIR,KAAK,CAACe,IAAI,KAAK,OAAO,IAAIC,SAAS,EAAE,EAAE;IACjD,MAAMC,MAAM,GAAGjB,KAAK,CAACiB,MAAM;IAC3BT,GAAG,GAAGS,MAAM,CAACC,KAAK,CAACC,MAAM,CAACF,MAAM,CAACG,cAAc,GAAG,CAAC,CAAC;EACxD;EACE,OAAOZ,GAAG;AACZ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}